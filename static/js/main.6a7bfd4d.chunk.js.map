{"version":3,"sources":["components/Charts/Line.tsx","components/Charts/ProgressLine.tsx","services/index.ts","hooks/useLocalStorage.tsx","components/Pages/Home/index.tsx","helpers/data/index.ts","components/Icons/index.tsx","components/QuestionCard/index.tsx","components/Pages/Exam/index.tsx","components/Pages/Practice/index.tsx","components/NoData/index.tsx","hooks/useNavigate.tsx","components/Pages/Review/index.tsx","components/Pages/Bookmarks/index.tsx","components/ThemeSwitch/index.tsx","components/AppHeader/index.tsx","components/ScrollToTop/index.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LineChart","props","_useState","useState","_useState2","_slicedToArray","isShowTooltip","setIsShowTooltip","_useState3","_useState4","tooltipContent","setTooltipContent","ref","useRef","tooltipRef","useEffect","_document$querySelect","_document","_document$querySelect2","timeFormat","d3","tooltipTimeFormat","margin","width","document","querySelector","clientWidth","height","newData","JSON","parse","stringify","datas","forEach","d","timestamp","time","svgElement","x","range","domain","map","y","drawline","curve","score","current","attr","append","concat","call","tickSizeOuter","tickSizeInner","tickPadding","ticks","tickSize","selectAll","remove","select","data","offset","color","enter","style","filter","feMerge","on","_event","pageX","pageY","window","innerWidth","left","right","top","_jsxs","children","_jsx","className","ProgressLine","twoPi","Math","PI","formatPercent","arc","startAngle","innerRadius","outerRadius","radius","progress","Number","percentage","toFixed","meter","endAngle","front","fillColor","displayText","text","formatJsonData","_titleAndOptions$titl","titleAndOptions","str","match","exec","Array","isArray","console","warn","options","optionsCounter","idx","trim","push","val","title","convertQuestionTitleToAnsMapping","replace","ans","abs","qn","category","getData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","response","wrap","_context","prev","next","fetch","process","sent","ok","Error","json","abrupt","stop","_x","apply","arguments","getHistories","histories","localStorage","getItem","getWrongQuestions","_ref2","_callee2","allQuestion","pickedQuestions","_context2","h","index","_x2","getBookmarks","bookmarks","defaultBookmark","html_css","javascript","setItem","getBookmarkedList","_ref3","_callee3","_getBookmarks","_getBookmarks$html_cs","_getBookmarks$javascr","htmlCssQuestions","javascriptQuestions","filteredHtmlCss","filteredJavaScript","_context3","i","includes","_toConsumableArray","useLocalStorage","key","initialValue","content","log","Function","getValue","value","setValue","categoryMap","Home","_useLocalStorage","scoreHistory","wrongHtmlCss","setWrongHtmlCss","wrongJavascript","setWrongJavascript","fetchData","wrongMarketQuestions","wrongEthicsQuestions","getAnalytics","resultType","finishCount","length","totalCount","round","marketPercentage","ethicsPercentage","reviewItems","practiceLinks","pageOfCategory","Link","to","id","slice","chance","require","pickQuestion","quantity","pickset","pickHalfHalfQuestion","amount","marketPicked","htmlcss","ethicsPicked","bookmark","viewBox","fill","xmlns","fillRule","bookmarkFill","threeDots","trash","QuestionCard","selected","updateSelected","bookmarked","setBookmarked","seq","haveSubmitted","onAnsChanged","getIsBookmarked","hasError","onClick","e","preventDefault","typeOfBookmarks","q","sort","a","b","removeBookmark","setBookmark","o","appendCss","isTheChosenAnswerWrong","isTheChosenCorrectWrong","name","checked","toString","onChange","target","onSelect","disabled","htmlFor","Exam","_useLocalStorage2","setScoreHistory","setData","userAnswer","updateUserAnswer","_useState5","_useState6","setScore","newRecord","Date","getTime","updateAnsArray","newValue","questionIndex","newAnsAry","calculateScore","correctLength","_Fragment","alert","thisScore","submit","Practice","_data$currentIndex","practiceType","useParams","defaultIndex","lastIndexOfTrue","lastIndexOf","lastIndexOfFalse","currentIndex","updateCurrent","hasSubmit","updateHasSubmit","resetSubmitRecord","jumpTo","goto","isNaN","updateCurrentNum","pager","currentQuestion","renderContent","prompt","userChooseAns","isCorrect","String","NoData","useNavigate","initialIndex","clearHasSubmit","setLength","setIndex","navigateBody","prevIndex","Review","_data$curIndex","_useNavigate","curIndex","Bookmarks","databookmarkedQuestionss","ThemeSwitch","isDarkTheme","setDarkTheme","matchMedia","matches","addEventListener","newColorScheme","setAttribute","AppHeader","showMenu","toggleMenu","history","useHistory","toToggleMenu","confirm","clear","location","reload","ScrollToTop","pathname","useLocation","scrollTo","App","Router","basename","Switch","Route","exact","path","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a7bfd4d.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './Line.scss';\n\nconst LineChart = (props: {\n    datas: {\n        time: number;\n        score: number;\n    }[]\n}) => {\n    const [isShowTooltip, setIsShowTooltip] = useState<Boolean>(false);\n    const [tooltipContent, setTooltipContent] = useState<JSX.Element | string>('');\n    const ref = useRef<SVGSVGElement>(null);\n    const tooltipRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const timeFormat = d3.timeFormat('%H:%M:%S');\n        const tooltipTimeFormat = d3.timeFormat('%Y-%b-%d %H:%M:%S');\n        const margin = ({top: 20, right: 10, bottom: 20, left: 40});\n        const width = document?.querySelector('#root .container')?.clientWidth ?? 300;\n        const height = 250;\n\n        const newData: any = JSON.parse(JSON.stringify(props.datas));\n        // [{\"time\":1619510720731,\"score\":2},{\"time\":1619510743700,\"score\":4}]\n        \n        newData.forEach((d: any) => {\n            // formar time\n            // console.log('parseTime', parseTime(\"1607326845882\"));\n            // console.log('timeFormat', timeFormat(new Date(1607326845882)));\n            d.timestamp = d.time;\n            d.time = timeFormat(d.time);\n        });\n        \n        // const minTime: any = d3.min(newData, (d: any) => d.time);\n        // const maxTime: any = d3.max(newData, (d: any) => d.time);\n        // const min: any = d3.min(datas, (d) => d.score);\n        // const max: any = d3.max(datas, (d) => d.score);\n\n        let svgElement: any = null;\n    \n        // ranges\n        \n        // if want to use time as scale\n        // const x: any = d3.scaleTime()\n        //     .range([margin.left + 10, width - margin.right])\n        //     .domain([minTime, maxTime]);\n\n        // if want to use category as scale\n        const paddingForX = 20;\n        const x: any = d3.scalePoint()\n            .range([margin.left + 10 + paddingForX, width - margin.right - paddingForX])\n            .domain(newData.map((d: any) => { return d.time }));\n        \n        const y = d3.scaleLinear()\n            .range([height - margin.bottom, margin.top])\n            .domain([0, 100]);\n        \n        const drawline = d3.line()\n            .curve(d3.curveMonotoneX)\n            .x((d: any) => x(d.time))\n            .y((d: any) => y(d.score))\n\n        svgElement = d3.select(ref.current)\n        svgElement.attr('viewBox', [0, 0, width, height]).attr('class', 'line-chart');\n\n        svgElement.append('g')\n            .attr('class', 'x-axis')\n            .attr('transform', `translate(0, ${height - margin.bottom})`)\n            // if use timeScale\n            // .call(d3.axisBottom(x).tickFormat((d: any) => timeFormat(d)).tickSizeOuter(0).tickSizeInner(0).tickPadding(10));\n            .call(d3.axisBottom(x).tickSizeOuter(0).tickSizeInner(0).tickPadding(10));\n\n        svgElement.append('g')\n            .attr('class', 'y-axis')\n            .attr('transform', `translate(${margin.left}, 0)`)\n            // .call(d3.axisLeft(y).ticks(5).tickSize(-width).tickSizeOuter(0).tickSizeInner(0).tickPadding(10));\n            // tickSize(-width) 畫出每條橫軸\n            // tickPadding  每一個 y 軸上文字與橫線的間距\n            // ticks 要拆幾格\n            .call(d3.axisLeft(y).ticks(4).tickSize(-width).tickPadding(15));\n            \n        // remove both underline\n        svgElement.selectAll('.domain').remove();\n        svgElement.select('.domain').attr('stroke', '#999')\n\n        // Set the gradient\n        svgElement.append('linearGradient')\n            .attr('id', 'line-gradient')\n            .attr('gradientUnits', 'userSpaceOnUse')\n            .selectAll('stop').data([\n                { offset: '0%', color: '#ffa00b' },\n                { offset: '100%', color: '#42605e' }\n            ])\n            .enter().append('stop')\n            .attr('offset', (d: any) => d.offset )\n            .attr('stop-color', (d: any) => d.color );\n\n        svgElement.append('path')\n            .attr('class', 'line')\n            .attr('stroke', 'url(#line-gradient)')\n            .attr('stroke-width', 3)\n            .attr('fill', 'none')\n            .style('stroke-linecap', 'round')\n            .attr('d', drawline(newData));\n        \n        \n        // filters go in defs element\n        var defs = svgElement.append('defs');\n        var filter = defs.append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', height)\n        filter.append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 4)\n            .attr('result', 'blur');\n        filter.append('feOffset')\n            .attr('in', 'blur')\n            .attr('dx', 0)\n            .attr('dy', 15)\n            .attr('result', 'offsetBlur');\n        var feMerge = filter.append('feMerge');\n        \n        feMerge.append('feMergeNode').attr('in', 'offsetBlur')\n        feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n        \n        svgElement.append('path')\n            .attr('class', 'line-shadow')\n            .style('filter', 'url(#drop-shadow)')\n            .attr('d', drawline(newData));\n        \n        // insert circles\n        svgElement.selectAll('circle')\n            .data(newData)\n            .enter()\n            .append('circle')\n            .attr('r', 5)\n            .attr('cx', (d: any) => x(d.time))\n            .attr('cy', (d: any ) => y(d.score))\n            .style('cursor', 'pointer')\n            .style('fill', () => {\n                return '#795548';\n            })\n            .on('mouseover', function(d: any) {\n                if (tooltipRef?.current) {\n                    setIsShowTooltip(true);\n                    const { pageX, pageY } = (d3 as any).event;\n                    \n                    if (pageX + 140 > window.innerWidth) {\n                        tooltipRef.current.style.left = 'initial';\n                        tooltipRef.current.style.right = (window.innerWidth - pageX) + 'px';\n                    } else {\n                        tooltipRef.current.style.left = pageX + 'px';\n                    }\n\n                    tooltipRef.current.style.top = (pageY - 70) + 'px';\n                    \n                    \n                    setTooltipContent(<div>\n                        <div>{tooltipTimeFormat(d.timestamp)}</div>\n                        <div><strong>Score</strong>: {d.score}</div>\n                    </div>);\n                }\n            })\t\t\t\t\t\n            .on('mouseout', function(d: any) {\n                if (tooltipRef?.current) {\n                    setIsShowTooltip(false);\n                }\n            });\n    }, [props.datas]);\n\n    return (\n        <div className=\"line-chart-container\">\n            <svg ref={ref}></svg>\n            <div className={`d3-tooltip ${isShowTooltip ? 'active' : '' }`} ref={tooltipRef}>{tooltipContent}</div>\n        </div>\n    )\n\n}\nexport default LineChart;","import { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst ProgressLine = (props: {\n    percentage: number;\n    fillColor: string;\n}) => {\n    const ref = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const width = document?.querySelector('#root .container')?.clientWidth ?? 300;\n        const height = 100;    \n        const radius = 50;\n        const border = 5;\n        const twoPi = Math.PI * 2;\n        const formatPercent = d3.format('.0%');\n        const arc = d3.arc()\n            .startAngle(0)\n            .innerRadius(radius)\n            .outerRadius(radius - border);\n        const progress = Number((props.percentage / 100).toFixed(2));\n\n        const svgElement: any = d3.select(ref.current);\n        svgElement.attr(\"viewBox\", [0, 0, width, height]).attr('class', 'line-chart');\n\n        const g = svgElement.append('g').attr('class', 'g-transform').attr('transform', `translate(${width/2}, ${height/2})`);\n\n        const meter = g.append('g').attr('class', 'progress-meter');\n        meter.append('path')\n            .attr('class', 'background')\n            .attr('fill', '#ccc')\n            .attr('fill-opacity', 0.5)\n            .attr('d', arc.endAngle(twoPi));\n\n     \n        const front = meter.append('path')\n            .attr('class', 'foreground')\n            .attr('fill', props.fillColor)\n            // .attr('fill', 'none')\n            // .attr(\"stroke\", \"red\")\n            // .attr(\"stroke-width\", 3)\n            // .style(\"stroke-linecap\", \"round\")\n            .attr('fill-opacity', 1);\n\n        const displayText = meter.append('text')\n            .attr('fill', '#333')\n            .attr('text-anchor', 'middle')\n            .attr('dy', '.35em');\n\n        // foreground.attr('d', arc.endAngle(twoPi * progress));\n        front.attr('d', arc.endAngle(twoPi * progress));\n        displayText.text(formatPercent(progress));\n\n    }, [props]);\n\n\n    return (\n        <div className=\"line-chart-container\">\n            <svg ref={ref}></svg>\n        </div>\n    )\n\n}\nexport default ProgressLine;","export const convertQuestionTitleToAnsMapping = (str: string) : {\n    title: string;\n    options: IOption[]\n} | null => {\n    // regex can't defined as global variable\n    // please search \"RegExp.exec() returns NULL sporadically\"\n    const regex: RegExp = /(.*?)\\s*\\(1\\)(.*?)\\s*\\(2\\)(.*?)\\s*\\(3\\)(.*?)\\s*\\(4\\)(.*?)\\s*$/g;\n    const match: RegExpExecArray | null = regex.exec(str);\n    \n    if (!Array.isArray(match)) {\n        console.warn(`${str} is invalid question title format`);\n        return null;\n    }\n\n    let options = [];\n    let optionsCounter = 1;\n    // index 2 ~ 5 means A, B, C, D\n    for (let idx = 2; idx <= 5; idx++) {\n        // remove \\n\n        // const text = match[idx].trim().replace(' ', '');\n        const text = match[idx].trim();\n\n        options.push({\n            val: optionsCounter,\n            text\n        });\n        optionsCounter++;\n    }\n\n    // const title = match[1].trim().replace(' ', '');\n    const title = match[1].trim();\n\n    return {\n        title: title || 'no title',\n        options\n    };\n}\n\n\nexport const formatJsonData = (datas: OriginalQuestion[]) : FormatedQuestion[] => {\n    const result = datas.map((d) => {\n\n        const trimedTitle = d.title.replace(/\\n/g, '');\n        const titleAndOptions = convertQuestionTitleToAnsMapping(trimedTitle);\n\n        return {\n            ans: Math.abs(d.ans),\n            qn: d.qn,\n            category: d.category as QuestionTypes,\n            title: titleAndOptions?.title ?? '',\n            options: titleAndOptions?.options\n        }\n    });\n    return result;\n}   \n\nexport const getData = async (type: QuestionTypes) => {\n    const response = await fetch(`${process.env.PUBLIC_URL}/data/${type}.json`);\n    if (!response.ok) {\n        throw new Error('An error has occured');\n    }\n\n    const datas = await response.json();\n    return formatJsonData(datas);\n}\n\nexport const getHistories = (type: QuestionTypes) => {\n    const histories = JSON.parse(window.localStorage.getItem(`${type}-pra-history`) as string);\n    if (!histories) {\n        return null;\n    }\n\n    return histories;\n}\n\nexport const getWrongQuestions = async (type: QuestionTypes) => {\n    const allQuestion = await getData(type);\n\n    const histories = getHistories(type);\n    \n    let pickedQuestions: FormatedQuestion[]= [];\n    \n    if (histories) {\n        histories.forEach((h: null | string, index: number) => {\n            if (h === \"false\") {\n                pickedQuestions.push(allQuestion[index])\n            }\n        });\n    }\n    \n    return pickedQuestions;\n}\n\nexport const getBookmarks = () => {\n    const bookmarks = JSON.parse(window.localStorage.getItem('bookmarks') as string);\n    if (!bookmarks) {\n        const defaultBookmark = {\n            html_css: [],\n            javascript: []\n        };\n\n        window.localStorage.setItem('bookmarks', JSON.stringify(defaultBookmark));\n\n        return defaultBookmark;\n    }\n    return bookmarks;\n}\n\nexport const setBookmark = (type: QuestionTypes, qn: number) => {\n    const bookmarks = getBookmarks();\n    \n    if (!bookmarks[type].includes(qn)) {\n        bookmarks[type].push(qn);\n        bookmarks[type].sort((a: number, b: number) => a - b);\n        window.localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n    }\n}\n\nexport const removeBookmark = (type: QuestionTypes, qn: number) => {\n    const bookmarks = getBookmarks();\n    \n    let typeOfBookmarks = bookmarks[type];\n    typeOfBookmarks = typeOfBookmarks.filter((q: number) => q !== qn);\n    \n    bookmarks[type] = typeOfBookmarks.sort((a: number, b: number) => a - b);\n    \n    window.localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n}\n\nexport const getIsBookmarked = (type: QuestionTypes, qn: number) => {\n    const bookmarks = getBookmarks();\n    return bookmarks[type] && bookmarks[type].includes(qn) ? true : false;\n}\n\nexport const getBookmarkedList = async () => {\n    const { html_css = [], javascript = [] } = getBookmarks();\n\n    const htmlCssQuestions: FormatedQuestion[] = await getData('html_css');\n    const javascriptQuestions: FormatedQuestion[] = await getData('javascript');\n\n    const filteredHtmlCss = htmlCssQuestions.filter((i: FormatedQuestion) => html_css.includes(i.qn));\n    const filteredJavaScript = javascriptQuestions.filter((i: FormatedQuestion) => javascript.includes(i.qn));\n    return [...filteredHtmlCss, ...filteredJavaScript];\n}\n\nexport const clean = () => {\n    window.localStorage.clear();\n    window.location.reload();\n}","import { useState, useEffect } from 'react';\n\nconst getValue = (key: string, initialValue: string | number | any[]| Function): any => {\n    const content = window.localStorage.getItem(key);\n    if (content) {\n        console.log('hook content', content);\n        console.log('hook JSON.parse(content)', JSON.parse(content));\n        return JSON.parse(content);\n    }\n    if (initialValue instanceof Function) {\n        return initialValue();\n    }\n    return initialValue;\n};\n\nconst useLocalStorage = (key: string, initialValue: string | number | any[] | Function) => {\n    const [value, setValue] = useState(() => {\n    //     // 這邊用 function 目的要希望只會 called 一次，只需要從 localstorage 拿到 initial value\n        return getValue(key, initialValue);\n    });\n    // const [value, setValue] = useState(() => getValue(key, initialValue));\n\n    useEffect(() => {\n        // only when value changed, save value in localStorage\n        window.localStorage.setItem(key, JSON.stringify(value));\n    }, [value]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return [value, setValue];\n}\n\nexport default useLocalStorage;","import { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport LineChart from '../../Charts/Line';\nimport ProgressLine from '../../Charts/ProgressLine';\nimport { getHistories, getWrongQuestions } from '../../../services';\nimport useLocalStorage from '../../../hooks/useLocalStorage';\n\nconst categoryMap: { [p in QuestionTypes]: string } = {\n    html_css: 'HTML/CSS',\n    javascript: 'JavaScript'\n};\n\nconst Home = () => {\n    const [scoreHistory] = useLocalStorage('scoreHistory', []);\n    const [wrongHtmlCss, setWrongHtmlCss] = useState<FormatedQuestion[]>([]);\n    const [wrongJavascript, setWrongJavascript] = useState<FormatedQuestion[]>([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            // @FIX ME\n            const wrongMarketQuestions = await getWrongQuestions('html_css');\n            const wrongEthicsQuestions = await getWrongQuestions('javascript');\n\n            setWrongHtmlCss(wrongMarketQuestions);\n            setWrongJavascript(wrongEthicsQuestions);\n        }\n        fetchData();\n    }, []);\n\n    const getAnalytics = (type: QuestionTypes, resultType: 'percentage' | 'totalCount') => {\n        const histories = getHistories(type);\n    \n        if (!histories) {\n            return 0;\n        }\n\n        const finishCount = histories.filter((d: null | string) => d !== null).length;\n\n        if (resultType === 'percentage') {\n            const totalCount = histories.length;\n            return Math.round((finishCount/totalCount) * 100)\n        } else {\n            return finishCount;\n        }\n    }\n\n    const marketPercentage = getAnalytics('html_css', 'percentage');\n    const ethicsPercentage = getAnalytics('javascript', 'percentage');\n    \n    let reviewItems = [];\n    \n    let practiceLinks: JSX.Element[] = [];\n    for (let pageOfCategory in categoryMap) {\n        practiceLinks.push(\n            <div className=\"col-6\" key={pageOfCategory}>\n                <Link to={`/practice/${pageOfCategory}`} className=\"ans-btn practice-bg\">{(categoryMap as any)[pageOfCategory]}</Link>\n            </div>\n        );\n    }\n    \n\n    if (wrongHtmlCss.length) {\n        reviewItems.push(<div key=\"html_css\" className=\"col-6\">\n            <Link to=\"/review/html_css\" className=\"ans-btn review-bg\">HTML/CSS</Link>\n        </div>);\n    }\n    if (wrongJavascript.length) {\n        reviewItems.push(<div key=\"javascript\" className=\"col-6\">\n            <Link to=\"/review/javascript\" className=\"ans-btn review-bg\">JavaScript</Link>\n        </div>);\n    }\n\n    return (\n        <div>\n            <div className=\"container-fluid max-width-700 pt-4 pb-4\">\n                <div id=\"practice-sec\" className=\"mb-3\">\n                    <h3 className=\"section-heading\">考題練習 Practice</h3>\n                    <div className=\"row align-items-center\">\n                        {practiceLinks}\n                    </div>\n                </div>\n\n                {\n                    wrongHtmlCss.length || wrongJavascript.length ? (\n                        <div id=\"review-sec\" className=\"mb-3\">\n                            <h3 className=\"section-heading\">複習錯誤題目 Review</h3>\n                            <div className=\"row align-items-center\">\n                                {reviewItems}\n                            </div>\n                        </div>\n                    ) : null\n                }\n                \n                <h3 className=\"section-heading\">模擬考試 Mock examination</h3>\n                <Link to=\"/exam\" className=\"ans-btn exam-bg\">模擬測驗</Link>\n            </div>\n\n            \n            <div className=\"container-fluid max-width-700 mt-3 mb-3\">\n                <section>\n                    <h3 className=\"section-heading\">作答完成率 Answer completion rate</h3>\n                    <div className=\"progress-line-wrap\">\n                        <div className=\"progress-line-item\">HTML / CSS</div>\n                        <ProgressLine percentage={marketPercentage} fillColor='#8c682f'/>\n                        <dl className=\"progress-finished-dl\">\n                            <dt>已作答</dt>\n                            <dd>{ getAnalytics('html_css', 'totalCount') }</dd>\n                        </dl>\n                    </div>\n                    <div className=\"progress-line-wrap\">\n                        <div className=\"progress-line-item\">JavaScript</div>\n                        <ProgressLine percentage={ethicsPercentage} fillColor='#8c682f'/>\n                        <dl className=\"progress-finished-dl\">\n                            <dt>已作答</dt>\n                            <dd>{ getAnalytics('javascript', 'totalCount') }</dd>\n                        </dl>\n                    </div>\n                </section>\n                <section>\n                    <h3 className=\"section-heading\">近期模擬測驗分數 Latest Score Histories</h3>\n                    <div className=\"statistics-card\">\n                        <LineChart datas={scoreHistory.slice(-5)}/>\n                    </div>\n                </section>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n\n","var Chance = require('chance');\nvar chance = new Chance();\n\nexport const pickQuestion = (datas: any[], quantity?: number | null) => {\n    if (quantity === null) {\n        return datas;\n    }\n\n    if (quantity && quantity > datas.length) {\n        return datas;\n    }\n    \n    return chance.pickset(datas, quantity);\n}\n\nexport const pickHalfHalfQuestion = (datas: { htmlcss: any[], javascript: any[]}, quantity: number) => {\n    const amount = quantity / 2;\n\n    const marketPicked = chance.pickset(datas.htmlcss, amount);\n    const ethicsPicked = chance.pickset(datas.javascript, amount);\n\n    return [...marketPicked, ...ethicsPicked];\n}\n\n","// via https://icons.getbootstrap.com/\n// import bookmark from 'bootstrap-icons/icons/bookmark.svg';\n// import bookmarkFill from 'bootstrap-icons/icons/bookmark-fill.svg';\n\nexport const bookmark = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-bookmark\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\"/>\n    </svg>\n);\n\nexport const bookmarkFill = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-bookmark-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5V2z\"/>\n    </svg>\n);\n\nexport const chevronLeftWhite = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-left\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"/>\n    </svg>\n);\n\nexport const threeDots = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\n        <path d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"/>\n    </svg>\n)\n\nexport const trash = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n        <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\n    </svg>\n)","import { useState, useEffect, ChangeEvent, SyntheticEvent } from 'react';\nimport { bookmark, bookmarkFill } from '../../components/Icons/index';\nimport { getIsBookmarked, setBookmark, removeBookmark } from '../../services/index';\n\nimport './QuestionCard.scss';\n\nconst categoryMap: { [p in QuestionTypes]: string } = {\n    html_css: 'HTML/CSS',\n    javascript: 'JavaScript'\n};\n\nconst QuestionCard = (props: {\n    seq: number;\n    data: FormatedQuestion;\n    haveSubmitted: boolean;\n    onAnsChanged: Function;\n}) => {\n\n    const [selected, updateSelected] = useState<string | null>(null);\n\n    const [bookmarked, setBookmarked] = useState<Boolean>(false);\n\n    const idx = props.seq;\n    const { data, haveSubmitted, onAnsChanged } = props;\n    \n    const onSelect = (e: ChangeEvent<HTMLInputElement>):void => {\n        updateSelected(e.target.value);\n        // pass value to parent component\n        onAnsChanged(e.target.value, idx);\n    }\n\n    const toggleBookmark = (e: SyntheticEvent) => {\n        e.preventDefault();\n        const current = !bookmarked;\n        \n        setBookmarked(current);\n        if (current === false) {\n            removeBookmark(data.category, Number(data.qn));\n        } else {\n            setBookmark(data.category, Number(data.qn));\n        }\n    }\n\n    useEffect(() => {\n        setBookmarked(getIsBookmarked(data.category, Number(data.qn)));\n    }, [data]);\n\n    let content = null;\n    let hasError = haveSubmitted === true && Number(selected) !== Number(data.ans);\n\n    content = (\n        <div className={`question-card ${hasError ? 'has-error' : ''}`} data-testid=\"que-card\">\n            <div className=\"question-card-content\">\n                <div className=\"question-card-header\">\n                    <div className=\"question-idx\">{idx + 1}</div>\n                    <span className={`question-badge badge-${data.category}`} data-testid=\"que-badge\">{categoryMap[data.category]} {data.qn}</span>\n                    <button className=\"question-bm-btn\" data-testid=\"que-bm-btn\" onClick={ toggleBookmark }>\n                        {\n                            bookmarked ? bookmarkFill : bookmark\n                        }\n                    </button>\n                </div>\n                \n                <h3 className=\"question-title\" data-testid=\"que-title\">{data.title}</h3>\n                \n                <div className=\"ans-btn-group\">\n                    { data.options ? data.options.map((o: IOption) => {\n                        \n                        let appendCss = '';\n                        if (haveSubmitted === true) {\n                            const isTheChosenAnswerWrong = Number(selected) !== Number(data.ans) && o.val === data.ans;\n                            const isTheChosenCorrectWrong = Number(selected) === Number(data.ans) && o.val === data.ans;\n                            appendCss = isTheChosenAnswerWrong ? 'wrong-ans-marked' :  isTheChosenCorrectWrong ? 'correct-ans-marked' : '';\n                        }\n\n                        return (\n                            <div key={`${o.text}`} className={`custom-control custom-radio ${appendCss}`}>\n                                <input \n                                    type=\"radio\"\n                                    id={`opt-${idx}-${o.val}`}\n                                    name={`q-${idx}`}\n                                    value={o.val}\n                                    checked={selected === o.val.toString()} \n                                    onChange={(e) => onSelect(e)}\n                                    disabled={props.haveSubmitted === true}\n                                    className=\"custom-control-input\"\n                                    data-testid=\"que-input\" />\n                                <label className=\"custom-control-label d-block\" htmlFor={`opt-${idx}-${o.val}`}>({o.val}) {o.text}</label>\n                            </div>\n                        )}) : null\n                    }\n                </div>\n            </div>\n        </div>)\n    return (\n        content\n    );\n}\n\nexport default QuestionCard;","import { useState, useEffect, SyntheticEvent } from 'react';\nimport { pickHalfHalfQuestion } from '../../../helpers/data/index';\nimport { getData } from '../../../services/index';\nimport QuestionCard from '../../QuestionCard';\nimport useLocalStorage from '../../../hooks/useLocalStorage';\n\nconst TOTAL = 10;\n\nconst Exam = () => {\n    const [scoreHistory, setScoreHistory] = useLocalStorage('scoreHistory', []);\n    const [data, setData] = useState<FormatedQuestion[]>([]);\n    const [userAnswer, updateUserAnswer] = useState<any[]>([]);\n    const [score, setScore] = useState<null | number>(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const [htmlcss, javascript] : [FormatedQuestion[], FormatedQuestion[]] = [\n                await getData('html_css'),\n                await getData('javascript')\n            ];\n\n            const datas = {\n                htmlcss,\n                javascript\n            };\n            // generate questions\n            setData(pickHalfHalfQuestion(datas, TOTAL));\n        }\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        if (data.length) {\n            updateUserAnswer(new Array(data.length).fill(null));\n        }\n    }, [data]);\n\n    useEffect(() => {\n        if (score === null) {\n            return;\n        }\n        const newRecord = JSON.parse(JSON.stringify(scoreHistory));\n        newRecord.push({\n            time: new Date().getTime(),\n            score\n        });\n        setScoreHistory(newRecord);\n    }, [score]) // eslint-disable-line react-hooks/exhaustive-deps\n\n    const updateAnsArray = (newValue: string | number, questionIndex: number):void => {\n        const newAnsAry = [...userAnswer];\n        newAnsAry[questionIndex] = newValue;\n        updateUserAnswer(newAnsAry);\n    }\n  \n    const submit = (e: SyntheticEvent) => {\n        e.preventDefault();\n        if (userAnswer.includes(null)) {\n            alert('尚未有題目未作答');\n            // const getUnAnsweredQuestions = [...userAnswer].map((d, i) => d === null ? i : null).filter(x => x);\n            // console.log('未填答', getUnAnsweredQuestions); \n        }\n        const thisScore = calculateScore();\n        alert(`成績 ${thisScore}`);\n        setScore(thisScore);\n    }\n\n    const calculateScore = (): number => {\n        const eachScoreOfQuestiin = 100/TOTAL;\n        \n        let correctLength = 0;\n        data.forEach((d, idx) => {\n            if (userAnswer[idx] &&  Number(userAnswer[idx]) === Number(d.ans)) {\n                correctLength++;\n            }\n        });\n        return correctLength*eachScoreOfQuestiin;\n    }\n\n    return (\n        <div className=\"container max-width-700 mt-3 mb-5\" data-testid=\"exam-page\">\n            {\n                data.length === 0 ?\n                    <div className=\"text-center\" data-testid=\"loading\">Loading</div>\n                    :\n                    <>\n                        <nav className=\"navbar navbar-light\" data-testid=\"navbar\">\n                            <div>模擬考</div>\n                        </nav>\n                        <div className=\"exams-wrap\">\n                            { data.map((d: any, idx: number) => (\n                                <QuestionCard \n                                    key={idx}\n                                    seq={idx}\n                                    data={d}\n                                    haveSubmitted={score !== null ? true : false}\n                                    onAnsChanged={updateAnsArray}\n                                />\n                            ))}\n                        </div>\n                    </>\n            }\n            \n            <div className=\"ans-btn-fixed\">\n                <div className=\"container max-width-700\">\n                    <button className=\"ans-btn d-inline-block w-50\" onClick={(e) => submit(e)} disabled={score !== null}>{score !== null ? '已' : ''}交卷</button>\n                    {\n                        score !== null && (<div className=\"score-result\">成績: {score}</div>)\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Exam;\n\n","import { useState, useEffect, SyntheticEvent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { pickQuestion } from '../../../helpers/data/index';\nimport { getData } from '../../../services/index';\nimport QuestionCard from '../../QuestionCard';\n\nconst Practice = () => {\n    const { practiceType } = useParams<{ practiceType: QuestionTypes }>();\n    \n    let defaultIndex = 0;\n    if (window.localStorage.getItem(`${practiceType}-pra-history`)) {\n        const histories = JSON.parse(window.localStorage.getItem(`${practiceType}-pra-history`) as string);\n        const lastIndexOfTrue = histories.lastIndexOf('true');\n        const lastIndexOfFalse = histories.lastIndexOf('false');\n        if (lastIndexOfFalse > lastIndexOfTrue) {\n            defaultIndex = lastIndexOfFalse + 1; \n        } else {\n            defaultIndex = lastIndexOfTrue + 1;\n        }\n    }\n\n    const [data, setData] = useState<FormatedQuestion[]>([]);\n    const [currentIndex, updateCurrent] = useState<number>(defaultIndex);\n    const [hasSubmit, updateHasSubmit] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (practiceType === 'html_css' || practiceType === 'javascript') {\n            const fetchData = async () => {\n                let datas = await getData(practiceType);\n                \n                // generate questions by practice type\n                setData(pickQuestion(datas, null));\n            }\n            fetchData();\n        } else {\n            console.warn('practiceType is wrong');\n        }\n    }, [practiceType]);\n\n    useEffect(() => {\n        if (data.length > 0) {\n            if (!window.localStorage.getItem(`${practiceType}-pra-history`)) {\n                window.localStorage.setItem(`${practiceType}-pra-history`, JSON.stringify(Array(data.length).fill(null))); \n            }\n        }\n    }, [practiceType, data]);  \n\n    const resetSubmitRecord = () => {\n        // reset hasSubmit to false\n        updateHasSubmit(false);\n    };\n\n    const prev = (e: SyntheticEvent) => {\n        resetSubmitRecord();\n\n        updateCurrent(currentIndex - 1);\n    }\n\n    const next = (e: SyntheticEvent) => {\n        resetSubmitRecord();\n        const newIndex = currentIndex + 1;\n        updateCurrent(newIndex);\n    }\n\n    const updateAnsArray = (userChooseAns: string | number, questionIndex: number):void => {\n        const isCorrect = Number(data[currentIndex].ans) === Number(userChooseAns);\n    \n        updateHasSubmit(true);\n\n        if (window.localStorage.getItem(`${practiceType}-pra-history`)) {\n            const histories = JSON.parse(window.localStorage.getItem(`${practiceType}-pra-history`) as string);\n            histories[questionIndex] = String(isCorrect);\n            window.localStorage.setItem(`${practiceType}-pra-history`, JSON.stringify(histories)); \n        }\n    }\n\n    const promptJump = (e: SyntheticEvent) => {\n        e.preventDefault();\n        jumpTo((window as any).prompt('直接移動到第幾題?'));\n    }\n\n    const jumpTo = (goto: number) => {\n        if (!goto) {\n            return;\n        }\n        \n        if (isNaN(goto)) {\n            return alert('很抱歉，請輸入正確的題號');\n        }\n        \n        resetSubmitRecord();\n        \n        let updateCurrentNum = Number(goto) - 1;\n\n        if (Number(goto) <= 0) {    \n            updateCurrentNum = 0;\n        } else if (Number(goto) > data.length) {\n            updateCurrentNum = data.length - 1;\n        }\n        return updateCurrent(updateCurrentNum);\n    }\n\n    const pager = (\n        <div className=\"ans-btn-fixed\">\n            <div className=\"container max-width-700\">\n                <div className=\"row\">\n                    <div className=\"col-6 text-left\">\n                        <button className=\"ans-btn\" data-testid=\"prev-btn\" onClick={(e) => prev(e)} disabled={currentIndex <= 0}>上一題 Prev</button>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <button className=\"ans-btn\" data-testid=\"next-btn\" onClick={(e) => next(e)} disabled={currentIndex + 1  > data.length}>下一題 Next</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    const currentQuestion = data?.[currentIndex] ?? null;\n  \n    let renderContent = null;\n    if (data.length === 0) {\n        renderContent = (<div className=\"text-center\" data-testid=\"loading\">Loading</div>);\n    } else if (currentIndex >= data.length) {\n        renderContent = (\n            <div className=\"text-center\">\n                <div data-testid=\"empty-content\">\n                    沒有題目了\n                </div>\n                <span className=\"btn\" data-testid=\"reset-currentindex\" onClick={() => jumpTo(1)}>回到第一題</span>\n            </div>);\n    } else {\n        renderContent = (\n            <>\n                <nav className=\"navbar p-0 mb-3\">\n                    <div data-testid=\"pra-heading\">考題練習 {currentIndex + 1}/{data.length}</div>\n                    <button className=\"btn btn-outline-primary btn-sm pt-0 pb-0\" data-testid=\"jump-btn\" onClick={promptJump}>移至</button>\n                </nav>\n                <div className=\"exams-wrap\">\n                    <QuestionCard\n                        key={currentIndex}\n                        seq={currentIndex}\n                        data={currentQuestion}\n                        haveSubmitted={hasSubmit}\n                        onAnsChanged={updateAnsArray}\n                    />\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <div className=\"container max-width-700 mt-3 mb-5\">\n            { renderContent }\n            { pager }\n        </div>\n    );\n}\n\nexport default Practice;\n\n","import React from 'react';\n\nexport default function NoData(props: { text: string }) {\n    return (\n        <div className=\"text-center m-4\" data-testid=\"no-data\">{props.text}</div>\n    )\n}","import { useState, SyntheticEvent } from 'react';\n\nconst useNavigate = (initialIndex: number, clearHasSubmit: Function) => {\n    const [length, setLength] = useState<number>(0);\n    const [index, setIndex] = useState<number>(initialIndex);\n    \n    const prev = (e: SyntheticEvent) => {\n        e.preventDefault();\n        \n        // reset hasSubmit to false\n        clearHasSubmit();\n        setIndex(prevIndex => prevIndex - 1);\n    }\n\n    const next = (e: SyntheticEvent) => {\n        e.preventDefault();\n        \n        // reset hasSubmit to false\n        clearHasSubmit();\n        setIndex(prevIndex => prevIndex + 1);\n    }\n\n    const navigateBody = (\n        <div className=\"ans-btn-fixed\">\n            <div className=\"container max-width-700\">\n                <div className=\"row\">\n                    <div className=\"col-6 text-left\">\n                        <button className=\"ans-btn\" \n                            data-testid=\"prev-btn\"\n                            onClick={(e) => prev(e)}\n                            disabled={index <= 0}>上一題 Prev</button>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <button className=\"ans-btn\"\n                            data-testid=\"next-btn\"\n                            onClick={(e) => next(e)}\n                            disabled={index +1 === length}>下一題 Next</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    return {navigateBody, index, setLength};\n}\n\nexport default useNavigate;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getWrongQuestions } from '../../../services'; \nimport QuestionCard from '../../QuestionCard';\nimport NoData from '../../NoData';\nimport useNavigate from '../../../hooks/useNavigate';\n\nconst Review = () => {\n    const { practiceType } = useParams<{ practiceType: QuestionTypes }>();\n    const [data, setData] = useState<FormatedQuestion[]>([]);\n    const [hasSubmit, updateHasSubmit] = useState<boolean>(false);\n    \n    const {navigateBody, index: curIndex, setLength} = useNavigate(0, () => {\n        updateHasSubmit(false);\n    });\n\n    useEffect(() => {\n        if (practiceType === 'html_css' || practiceType === 'javascript') {\n            const fetchData = async () => {\n                const pickedQuestions = await getWrongQuestions(practiceType);\n                setData(pickedQuestions);\n                setLength(pickedQuestions.length);\n            }\n            fetchData();\n        } else {\n            console.warn('practiceType is wrong');\n        }\n    }, [practiceType]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const updateAnsArray = (/* userChooseAns: string | number, questionIndex: number */):void => {\n        // const isCorrect = Number(data[currentIndex].ans) === Number(userChooseAns);\n        updateHasSubmit(true);\n    }\n\n    const currentQuestion = data?.[curIndex] ?? null;\n  \n    let renderContent = null;\n\n    if (data.length === 0) {\n        renderContent = <NoData text=\"尚未存有答錯的題目\" />;\n    } else {\n        renderContent = (\n            <div className=\"container max-width-700 mt-3 mb-5\">\n                <nav className=\"navbar navbar-light\" data-testid=\"navbar\">\n                    <div data-testid=\"pra-heading\">複習錯誤題目 {curIndex + 1}/{data.length}</div>\n                </nav>\n                <div className=\"exams-wrap\">\n                    <QuestionCard\n                        key={curIndex}\n                        seq={curIndex}\n                        data={currentQuestion}\n                        haveSubmitted={hasSubmit}\n                        onAnsChanged={updateAnsArray}\n                    />\n                </div>\n                { navigateBody }\n            </div>\n        )\n    }\n\n    return renderContent;\n}\n\nexport default Review;\n\n","import { useState, useEffect } from 'react';\nimport { getBookmarkedList } from '../../../services'; \nimport QuestionCard from '../../QuestionCard';\nimport NoData from '../../NoData';\nimport useNavigate from '../../../hooks/useNavigate';\n\nconst Bookmarks = () => {\n    const [data, setData] = useState<FormatedQuestion[]>([]);\n    const [hasSubmit, updateHasSubmit] = useState<boolean>(false);\n\n    const {navigateBody, index: curIndex, setLength} = useNavigate(0, () => {\n        updateHasSubmit(false);\n    });\n  \n    useEffect(() => {\n        const fetchData = async () => {\n            let databookmarkedQuestionss = await getBookmarkedList();\n            setData(databookmarkedQuestionss);\n            setLength(databookmarkedQuestionss.length);\n        }\n        fetchData();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const updateAnsArray = (/* userChooseAns: string | number, questionIndex: number */):void => {\n        // const isCorrect = Number(data[currentIndex].ans) === Number(userChooseAns);\n        updateHasSubmit(true);\n    }\n\n    const currentQuestion = data?.[curIndex] ?? null;\n  \n    let renderContent = null;\n\n    if (data.length === 0) {\n        renderContent = (<NoData text=\"尚未存有書籤的題目\" />);\n    } else {\n        renderContent = (\n            <div className=\"container max-width-700 mt-3 mb-5\">\n                <nav className=\"navbar navbar-light\" data-testid=\"navbar\">\n                    <div data-testid=\"pra-heading\">我的書籤 {curIndex + 1}/{data.length}</div>\n                </nav>\n                <div className=\"exams-wrap\">\n                    <QuestionCard\n                        key={curIndex}\n                        seq={curIndex}\n                        data={currentQuestion}\n                        haveSubmitted={hasSubmit}\n                        onAnsChanged={updateAnsArray}\n                    />\n                </div>\n                {navigateBody}\n            </div>\n        )\n    }\n\n    return renderContent;\n}\n\nexport default Bookmarks;\n\n","import { useState, useEffect } from 'react';\nimport './ThemeSwitch.scss';\n\nconst ThemeSwitch = () => {\n    const [isDarkTheme, setDarkTheme] = useState<boolean>(false);\n    \n    useEffect(() => {\n        // set default theme mode by prefer-color-scheme\n        if (window.matchMedia) {\n            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                // dark mode\n                setDarkTheme(true);\n            }\n    \n            // detect prefers-color-scheme\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n                const newColorScheme = e.matches ? 'dark' : 'light';\n                setDarkTheme(newColorScheme === 'dark');\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        document.querySelector('body')!.setAttribute('data-theme', isDarkTheme ? 'dark' : 'light')\n    }, [isDarkTheme]);\n\n    return (\n        <div id=\"theme-swtich\" className=\"custom-control custom-switch\">\n            <i className=\"bi bi-moon-stars-fill\"></i>\n            <div className=\"custom-control custom-switch\">\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"theme-swtich-input\" data-testid=\"theme-swtich-input\" aria-label=\"Toogle Theme\" checked={isDarkTheme} onChange={(e) => { setDarkTheme(e.target.checked) }}/>\n                <label className=\"custom-control-label\" htmlFor=\"theme-swtich-input\"></label>\n            </div>\n        </div>\n    )\n}\n\nexport default ThemeSwitch;","import { useState, SyntheticEvent } from 'react';\nimport {\n    Link,\n    // useLocation,\n    useHistory\n} from \"react-router-dom\";\n\nimport { threeDots, bookmarkFill, trash } from '../Icons';\nimport ThemeSwitch from '../ThemeSwitch';\nimport { clean } from '../../services';\n\nimport './AppHeader.scss';\n\nconst AppHeader = () => {\n    const [showMenu, toggleMenu] = useState<boolean>(false);\n    // const location = useLocation();\n    const history = useHistory();\n\n    const toToggleMenu = (e: SyntheticEvent) => {\n        e.preventDefault();\n        toggleMenu(!showMenu);\n    };\n\n    const goToBookmarks = (e: SyntheticEvent) => {\n        toToggleMenu(e);\n        history.push(\"/bookmarks\");\n    }\n\n    const localstorageClean = (e: SyntheticEvent) => {\n        e.preventDefault();\n        const ans = window.confirm('您確定要清除所有作答記錄嗎?');\n        if (ans) {\n            clean();\n        }\n    }\n\n    return (\n        <header className=\"app-header sticky-top px-0\" data-testid=\"app-header\">\n            <div className=\"container max-width-700\">\n                <div className=\"row no-gutters flex-nowrap justify-content-between align-items-center\">\n                    <div className=\"col-3\">\n                        <button className={`btn btn-sm btn-menu ${showMenu ? 'active' : ''}`} onClick={toToggleMenu}>{threeDots}</button>\n                        {/* @TBD {\n                            location.pathname !== '/' ?  <Link to=\"/\" className=\"btn-link back-link\" data-testid=\"back-link\">{chevronLeftWhite}</Link> : null\n                        } */}\n                    </div>\n                    <div className=\"col-6 text-center\">\n                        <Link to=\"/\" className=\"header-logo\">\n                            F2E Exam Practice\n                        </Link>\n                    </div>\n                    <div className=\"col-3 text-right\">\n                        <ThemeSwitch />\n                    </div>\n                </div>\n                <div className={`menu ${showMenu ? 'active' : ''}`}>\n                    <ul>\n                        <li>\n                            <button onClick={goToBookmarks}><i className=\"menu-icon\">{bookmarkFill}</i>書籤列表</button>\n                        </li>\n                        <li>\n                            <button onClick={localstorageClean}><i className=\"menu-icon\">{trash}</i>清除作答記錄</button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default AppHeader;","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// via: https://reactrouter.com/web/guides/scroll-restoration\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n    \n    return null;\n}","import {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n// pages\nimport Home from './Pages/Home';\nimport Exam from './Pages/Exam';\nimport Practice from './Pages/Practice';\nimport Review from './Pages/Review';\nimport Bookmarks from './Pages/Bookmarks';\n\n// components\nimport AppHeader from './AppHeader';\nimport ScrollToTop from './ScrollToTop';\n\nfunction App() {\n    return (\n        <Router basename=\"/\">\n            <ScrollToTop />\n            <AppHeader />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route exact path=\"/exam\">\n                    <Exam />\n                </Route>\n                <Route path=\"/practice/:practiceType\">\n                    <Practice />\n                </Route>\n                <Route path=\"/review/:practiceType\">\n                    <Review />\n                </Route>\n                <Route path=\"/bookmarks\">\n                    <Bookmarks />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/custom_bootstrap.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}