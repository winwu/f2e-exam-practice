{"version":3,"sources":["components/Charts/Line.tsx","components/Charts/ProgressLine.tsx","services/index.ts","hooks/useLocalStorage.tsx","components/Pages/Home/index.tsx","helpers/data/index.ts","components/Icons/index.tsx","components/QuestionCard/index.tsx","components/Pages/Exam/index.tsx","components/Pages/Practice/index.tsx","components/NoData/index.tsx","hooks/useNavigate.tsx","components/Pages/Review/index.tsx","components/Pages/Bookmarks/index.tsx","components/ThemeSwitch/index.tsx","components/AppHeader/index.tsx","components/ScrollToTop/index.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LineChart","props","useState","isShowTooltip","setIsShowTooltip","tooltipContent","setTooltipContent","ref","useRef","tooltipRef","useEffect","timeFormat","d3","tooltipTimeFormat","margin","width","document","querySelector","clientWidth","height","newData","JSON","parse","stringify","datas","forEach","d","timestamp","time","svgElement","x","range","domain","map","y","drawline","curve","score","current","attr","append","call","tickSizeOuter","tickSizeInner","tickPadding","ticks","tickSize","selectAll","remove","select","data","offset","color","enter","style","filter","feMerge","on","pageX","pageY","window","innerWidth","left","right","top","className","ProgressLine","twoPi","Math","PI","formatPercent","arc","startAngle","innerRadius","outerRadius","radius","progress","Number","percentage","toFixed","meter","endAngle","front","fillColor","displayText","text","formatJsonData","titleAndOptions","str","match","exec","Array","isArray","console","warn","options","optionsCounter","idx","trim","push","val","title","convertQuestionTitleToAnsMapping","replace","ans","abs","qn","category","getData","type","a","fetch","process","response","ok","Error","json","getHistories","histories","localStorage","getItem","getWrongQuestions","allQuestion","pickedQuestions","h","index","getBookmarks","bookmarks","defaultBookmark","html_css","javascript","setItem","getBookmarkedList","htmlCssQuestions","javascriptQuestions","filteredHtmlCss","i","includes","filteredJavaScript","useLocalStorage","key","initialValue","content","log","Function","getValue","value","setValue","Home","scoreHistory","wrongHtmlCss","setWrongHtmlCss","wrongJavascript","setWrongJavascript","wrongMarketQuestions","wrongEthicsQuestions","fetchData","getPercentage","totalCount","length","finishCount","round","getFinisheCount","marketPercentage","ethicsPercentage","reviewItems","to","id","slice","chance","require","pickQuestion","quantity","pickset","pickHalfHalfQuestion","amount","marketPicked","htmlcss","ethicsPicked","bookmark","viewBox","fill","xmlns","fillRule","bookmarkFill","threeDots","trash","categoryMap","QuestionCard","selected","updateSelected","bookmarked","setBookmarked","seq","haveSubmitted","onAnsChanged","getIsBookmarked","hasError","data-testid","onClick","e","preventDefault","typeOfBookmarks","q","sort","b","removeBookmark","setBookmark","o","appendCss","isTheChosenAnswerWrong","isTheChosenCorrectWrong","name","checked","toString","onChange","target","onSelect","disabled","htmlFor","Exam","setScoreHistory","setData","userAnswer","updateUserAnswer","setScore","newRecord","Date","getTime","updateAnsArray","newValue","questionIndex","newAnsAry","calculateScore","correctLength","alert","thisScore","submit","Practice","practiceType","useParams","defaultIndex","lastIndexOfTrue","lastIndexOf","lastIndexOfFalse","currentIndex","updateCurrent","hasSubmit","updateHasSubmit","resetSubmitRecord","jumpTo","goto","isNaN","updateCurrentNum","pager","currentQuestion","renderContent","prompt","userChooseAns","isCorrect","String","NoData","useNavigate","initialIndex","clearHasSubmit","setLength","setIndex","navigateBody","prevIndex","prev","next","Review","curIndex","Bookmarks","databookmarkedQuestionss","ThemeSwitch","isDarkTheme","setDarkTheme","matchMedia","matches","addEventListener","newColorScheme","setAttribute","aria-label","AppHeader","showMenu","toggleMenu","history","useHistory","toToggleMenu","confirm","clear","location","reload","ScrollToTop","pathname","useLocation","scrollTo","App","basename","exact","path","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4TAkLeA,G,MA9KG,SAACC,GAKZ,IAAD,EACwCC,oBAAkB,GAD1D,mBACKC,EADL,KACoBC,EADpB,OAE0CF,mBAA+B,IAFzE,mBAEKG,EAFL,KAEqBC,EAFrB,KAGIC,EAAMC,iBAAsB,MAC5BC,EAAaD,iBAAuB,MA6J1C,OA3JAE,qBAAU,WAAO,IAAD,MACNC,EAAaC,IAAc,YAC3BC,EAAoBD,IAAc,qBAClCE,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAK,oBAAGC,gBAAH,iBAAG,EAAUC,cAAc,2BAA3B,aAAG,EAA6CC,mBAAhD,QAA+D,IACpEC,EAAS,IAETC,EAAeC,KAAKC,MAAMD,KAAKE,UAAUtB,EAAMuB,QAGrDJ,EAAQK,SAAQ,SAACC,GAIbA,EAAEC,UAAYD,EAAEE,KAChBF,EAAEE,KAAOjB,EAAWe,EAAEE,SAQ1B,IAAIC,EAAkB,KAWhBC,EAASlB,MACVmB,MAAM,CAACjB,EAAc,GAFN,GAEwBC,EAAQD,EAFhC,KAGfkB,OAAOZ,EAAQa,KAAI,SAACP,GAAa,OAAOA,EAAEE,SAEzCM,EAAItB,MACLmB,MAAM,CAACZ,EAASL,EAAeA,IAC/BkB,OAAO,CAAC,EAAG,MAEVG,EAAWvB,MACZwB,MAAMxB,KACNkB,GAAE,SAACJ,GAAD,OAAYI,EAAEJ,EAAEE,SAClBM,GAAE,SAACR,GAAD,OAAYQ,EAAER,EAAEW,WAEvBR,EAAajB,IAAUL,EAAI+B,UAChBC,KAAK,UAAW,CAAC,EAAG,EAAGxB,EAAOI,IAASoB,KAAK,QAAS,cAEhEV,EAAWW,OAAO,KACbD,KAAK,QAAS,UACdA,KAAK,YAFV,uBAEuCpB,EAASL,EAFhD,MAKK2B,KAAK7B,IAAckB,GAAGY,cAAc,GAAGC,cAAc,GAAGC,YAAY,KAEzEf,EAAWW,OAAO,KACbD,KAAK,QAAS,UACdA,KAAK,YAFV,oBAEoCzB,EAFpC,SAOK2B,KAAK7B,IAAYsB,GAAGW,MAAM,GAAGC,UAAU/B,GAAO6B,YAAY,KAG/Df,EAAWkB,UAAU,WAAWC,SAChCnB,EAAWoB,OAAO,WAAWV,KAAK,SAAU,QAG5CV,EAAWW,OAAO,kBACbD,KAAK,KAAM,iBACXA,KAAK,gBAAiB,kBACtBQ,UAAU,QAAQG,KAAK,CACpB,CAAEC,OAAQ,KAAMC,MAAO,WACvB,CAAED,OAAQ,OAAQC,MAAO,aAE5BC,QAAQb,OAAO,QACfD,KAAK,UAAU,SAACb,GAAD,OAAYA,EAAEyB,UAC7BZ,KAAK,cAAc,SAACb,GAAD,OAAYA,EAAE0B,SAEtCvB,EAAWW,OAAO,QACbD,KAAK,QAAS,QACdA,KAAK,SAAU,uBACfA,KAAK,eAAgB,GACrBA,KAAK,OAAQ,QACbe,MAAM,iBAAkB,SACxBf,KAAK,IAAKJ,EAASf,IAIxB,IACImC,EADO1B,EAAWW,OAAO,QACXA,OAAO,UACpBD,KAAK,KAAM,eACXA,KAAK,SAAUpB,GACpBoC,EAAOf,OAAO,kBACTD,KAAK,KAAM,eACXA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QACpBgB,EAAOf,OAAO,YACTD,KAAK,KAAM,QACXA,KAAK,KAAM,GACXA,KAAK,KAAM,IACXA,KAAK,SAAU,cACpB,IAAIiB,EAAUD,EAAOf,OAAO,WAE5BgB,EAAQhB,OAAO,eAAeD,KAAK,KAAM,cACzCiB,EAAQhB,OAAO,eAAeD,KAAK,KAAM,iBAEzCV,EAAWW,OAAO,QACbD,KAAK,QAAS,eACde,MAAM,SAAU,qBAChBf,KAAK,IAAKJ,EAASf,IAGxBS,EAAWkB,UAAU,UAChBG,KAAK9B,GACLiC,QACAb,OAAO,UACPD,KAAK,IAAK,GACVA,KAAK,MAAM,SAACb,GAAD,OAAYI,EAAEJ,EAAEE,SAC3BW,KAAK,MAAM,SAACb,GAAD,OAAaQ,EAAER,EAAEW,UAC5BiB,MAAM,SAAU,WAChBA,MAAM,QAAQ,WACX,MAAO,aAEVG,GAAG,aAAa,SAAS/B,GACtB,UAAIjB,QAAJ,IAAIA,OAAJ,EAAIA,EAAY6B,QAAS,CACrBlC,GAAiB,GADI,MAEKQ,IAAlB8C,EAFa,EAEbA,MAAOC,EAFM,EAENA,MAEXD,EAAQ,IAAME,OAAOC,YACrBpD,EAAW6B,QAAQgB,MAAMQ,KAAO,UAChCrD,EAAW6B,QAAQgB,MAAMS,MAASH,OAAOC,WAAaH,EAAS,MAE/DjD,EAAW6B,QAAQgB,MAAMQ,KAAOJ,EAAQ,KAG5CjD,EAAW6B,QAAQgB,MAAMU,IAAOL,EAAQ,GAAM,KAG9CrD,EAAkB,gCACd,8BAAMO,EAAkBa,EAAEC,aAC1B,gCAAK,2CAAL,KAA8BD,EAAEW,iBAI3CoB,GAAG,YAAY,SAAS/B,IACrB,OAAIjB,QAAJ,IAAIA,OAAJ,EAAIA,EAAY6B,UACZlC,GAAiB,QAG9B,CAACH,EAAMuB,QAGN,sBAAKyC,UAAU,uBAAf,UACI,qBAAK1D,IAAKA,IACV,qBAAK0D,UAAS,qBAAgB9D,EAAgB,SAAW,IAAOI,IAAKE,EAArE,SAAkFJ,SC9G/E6D,EA5DM,SAACjE,GAIlB,IAAMM,EAAMC,iBAAsB,MAiDlC,OA/CAE,qBAAU,WAAO,IAAD,MACNK,EAAK,oBAAGC,gBAAH,iBAAG,EAAUC,cAAc,2BAA3B,aAAG,EAA6CC,mBAAhD,QAA+D,IAIpEiD,EAAkB,EAAVC,KAAKC,GACbC,EAAgB1D,IAAU,OAC1B2D,EAAM3D,MACP4D,WAAW,GACXC,YANU,IAOVC,YAAYC,IACXC,EAAWC,QAAQ5E,EAAM6E,WAAa,KAAKC,QAAQ,IAEnDlD,EAAkBjB,IAAUL,EAAI+B,SACtCT,EAAWU,KAAK,UAAW,CAAC,EAAG,EAAGxB,EAZnB,MAYmCwB,KAAK,QAAS,cAEhE,IAEMyC,EAFInD,EAAWW,OAAO,KAAKD,KAAK,QAAS,eAAeA,KAAK,YAAzD,oBAAmFxB,EAAM,EAAzF,aAA+FI,GAA/F,MAEMqB,OAAO,KAAKD,KAAK,QAAS,kBAC1CyC,EAAMxC,OAAO,QACRD,KAAK,QAAS,cACdA,KAAK,OAAQ,QACbA,KAAK,eAAgB,IACrBA,KAAK,IAAKgC,EAAIU,SAASd,IAG5B,IAAMe,EAAQF,EAAMxC,OAAO,QACtBD,KAAK,QAAS,cACdA,KAAK,OAAQtC,EAAMkF,WAKnB5C,KAAK,eAAgB,GAEpB6C,EAAcJ,EAAMxC,OAAO,QAC5BD,KAAK,OAAQ,QACbA,KAAK,cAAe,UACpBA,KAAK,KAAM,SAGhB2C,EAAM3C,KAAK,IAAKgC,EAAIU,SAASd,EAAQS,IACrCQ,EAAYC,KAAKf,EAAcM,MAEhC,CAAC3E,IAIA,qBAAKgE,UAAU,uBAAf,SACI,qBAAK1D,IAAKA,O,QCnBT+E,EAAiB,SAAC9D,GAc3B,OAbeA,EAAMS,KAAI,SAACP,GAAO,IAAD,EAGtB6D,EA3CkC,SAACC,GAM7C,IACMC,EADgB,iEACsBC,KAAKF,GAEjD,IAAKG,MAAMC,QAAQH,GAEf,OADAI,QAAQC,KAAR,UAAgBN,EAAhB,sCACO,KAMX,IAHA,IAAIO,EAAU,GACVC,EAAiB,EAEZC,EAAM,EAAGA,GAAO,EAAGA,IAAO,CAG/B,IAAMZ,EAAOI,EAAMQ,GAAKC,OAExBH,EAAQI,KAAK,CACTC,IAAKJ,EACLX,SAEJW,IAMJ,MAAO,CACHK,MAHUZ,EAAM,GAAGS,QAGH,WAChBH,WASwBO,CADJ5E,EAAE2E,MAAME,QAAQ,MAAO,KAG3C,MAAO,CACHC,IAAKpC,KAAKqC,IAAI/E,EAAE8E,KAChBE,GAAIhF,EAAEgF,GACNC,SAAUjF,EAAEiF,SACZN,MAAK,iBAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAiBc,aAAnB,QAA4B,GACjCN,QAAO,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAiBQ,aAMzBa,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACIC,MAAM,GAAD,OAAIC,IAAJ,iBAAmCH,EAAnC,UADT,WACbI,EADa,QAELC,GAFK,sBAGT,IAAIC,MAAM,wBAHD,uBAMCF,EAASG,OANV,cAMb5F,EANa,yBAOZ8D,EAAe9D,IAPH,2CAAH,sDAUP6F,EAAe,SAACR,GACzB,IAAMS,EAAYjG,KAAKC,MAAMsC,OAAO2D,aAAaC,QAApB,UAA+BX,EAA/B,kBAC7B,OAAKS,GACM,MAMFG,EAAiB,uCAAG,WAAOZ,GAAP,mBAAAC,EAAA,sEACHF,EAAQC,GADL,cACvBa,EADuB,OAGvBJ,EAAYD,EAAaR,GAE3Bc,EAAqC,GAErCL,GACAA,EAAU7F,SAAQ,SAACmG,EAAkBC,GACvB,UAAND,GACAD,EAAgBxB,KAAKuB,EAAYG,OAVhB,kBAetBF,GAfsB,2CAAH,sDAkBjBG,EAAe,WACxB,IAAMC,EAAY1G,KAAKC,MAAMsC,OAAO2D,aAAaC,QAAQ,cACzD,IAAKO,EAAW,CACZ,IAAMC,EAAkB,CACpBC,SAAU,GACVC,WAAY,IAKhB,OAFAtE,OAAO2D,aAAaY,QAAQ,YAAa9G,KAAKE,UAAUyG,IAEjDA,EAEX,OAAOD,GA6BEK,EAAiB,uCAAG,4CAAAtB,EAAA,+DACcgB,IADd,IACrBG,gBADqB,MACV,GADU,MACNC,kBADM,MACO,GADP,WAGsBtB,EAAQ,YAH9B,cAGvByB,EAHuB,gBAIyBzB,EAAQ,cAJjC,cAIvB0B,EAJuB,OAMvBC,EAAkBF,EAAiB9E,QAAO,SAACiF,GAAD,OAAyBP,EAASQ,SAASD,EAAE9B,OACvFgC,EAAqBJ,EAAoB/E,QAAO,SAACiF,GAAD,OAAyBN,EAAWO,SAASD,EAAE9B,OAPxE,wCAQlB6B,GARkB,YAQEG,KARF,4CAAH,qDCxGfC,EAfS,SAACC,EAAaC,GAAsD,IAAD,EAC7D3I,oBAAS,WAE/B,OAhBS,SAAC0I,EAAaC,GAC3B,IAAMC,EAAUlF,OAAO2D,aAAaC,QAAQoB,GAC5C,OAAIE,GACAjD,QAAQkD,IAAI,eAAgBD,GAC5BjD,QAAQkD,IAAI,2BAA4B1H,KAAKC,MAAMwH,IAC5CzH,KAAKC,MAAMwH,IAElBD,aAAwBG,SACjBH,IAEJA,EAMII,CAASL,EAAKC,MAH8D,mBAChFK,EADgF,KACzEC,EADyE,KAYvF,OALAzI,qBAAU,WAENkD,OAAO2D,aAAaY,QAAQS,EAAKvH,KAAKE,UAAU2H,MACjD,CAACA,IAEG,CAACA,EAAOC,IC+FJC,EAnHF,WAAO,IAAD,EACQT,EAAgB,eAAgB,IAAhDU,EADQ,sBAEyBnJ,mBAA6B,IAFtD,mBAERoJ,EAFQ,KAEMC,EAFN,OAG+BrJ,mBAA6B,IAH5D,mBAGRsJ,EAHQ,KAGSC,EAHT,KAKf/I,qBAAU,YACS,uCAAG,8BAAAoG,EAAA,sEAEqBW,EAAkB,YAFvC,cAERiC,EAFQ,gBAGqBjC,EAAkB,cAHvC,OAGRkC,EAHQ,OAKdJ,EAAgBG,GAChBD,EAAmBE,GANL,2CAAH,qDAQfC,KACD,IAEH,IAAMC,EAAgB,SAAChD,GACnB,IAAMS,EAAYD,EAAaR,GAE/B,IAAKS,EACD,OAAO,EAEX,IAAMwC,EAAaxC,EAAUyC,OACvBC,EAAc1C,EAAU/D,QAAO,SAAC7B,GAAD,OAA4B,OAANA,KAAYqI,OACvE,OAAO3F,KAAK6F,MAAOD,EAAYF,EAAc,MAG3CI,EAAkB,SAACrD,GACrB,IAAMS,EAAYD,EAAaR,GAE/B,OAAKS,EAGEA,EAAU/D,QAAO,SAAC7B,GAAD,OAAkB,OAANA,KAAYqI,OAFrC,GAKTI,EAAmBN,EAAc,YACjCO,EAAmBP,EAAc,cAGnCQ,EAAc,GAYlB,OAXIf,EAAaS,QACbM,EAAYlE,KAAK,qBAAoBlC,UAAU,QAA9B,SACb,cAAC,IAAD,CAAMqG,GAAG,mBAAmBrG,UAAU,oBAAtC,uBADsB,aAI1BuF,EAAgBO,QAChBM,EAAYlE,KAAK,qBAAsBlC,UAAU,QAAhC,SACb,cAAC,IAAD,CAAMqG,GAAG,qBAAqBrG,UAAU,oBAAxC,yBADsB,eAM1B,gCACI,sBAAKA,UAAU,0CAAf,UACI,sBAAKsG,GAAG,eAAetG,UAAU,OAAjC,UACI,oBAAIA,UAAU,kBAAd,+CACA,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAAC,IAAD,CAAMqG,GAAG,qBAAqBrG,UAAU,sBAAxC,wBAEJ,qBAAKA,UAAU,QAAf,SACI,cAAC,IAAD,CAAMqG,GAAG,uBAAuBrG,UAAU,sBAA1C,gCAMRqF,EAAaS,QAAUP,EAAgBO,OACnC,sBAAKQ,GAAG,aAAatG,UAAU,OAA/B,UACI,oBAAIA,UAAU,kBAAd,yDACA,qBAAKA,UAAU,yBAAf,SACKoG,OAGT,KAGR,oBAAIpG,UAAU,kBAAd,uDACA,cAAC,IAAD,CAAMqG,GAAG,QAAQrG,UAAU,kBAA3B,yCAIJ,sBAAKA,UAAU,0CAAf,UACI,oCACI,oBAAIA,UAAU,kBAAd,mEACA,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,qBAAf,wBACA,cAAC,EAAD,CAAca,WAAYqF,EAAkBhF,UAAU,YACtD,qBAAIlB,UAAU,uBAAd,UACI,oDACA,6BAAMiG,EAAgB,oBAG9B,sBAAKjG,UAAU,qBAAf,UACI,qBAAKA,UAAU,qBAAf,wBACA,cAAC,EAAD,CAAca,WAAYsF,EAAkBjF,UAAU,YACtD,qBAAIlB,UAAU,uBAAd,UACI,oDACA,6BAAMiG,EAAgB,yBAIlC,oCACI,oBAAIjG,UAAU,kBAAd,qFACA,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,CAAWzC,MAAO6H,EAAamB,OAAO,iBCjH1DC,EAAS,IADAC,EAAQ,KAGRC,EAAe,SAACnJ,EAAcoJ,GACvC,OAAiB,OAAbA,GAIAA,GAAYA,EAAWpJ,EAAMuI,OAHtBvI,EAOJiJ,EAAOI,QAAQrJ,EAAOoJ,IAGpBE,EAAuB,SAACtJ,EAA6CoJ,GAC9E,IAAMG,EAASH,EAAW,EAEpBI,EAAeP,EAAOI,QAAQrJ,EAAMyJ,QAASF,GAC7CG,EAAeT,EAAOI,QAAQrJ,EAAM0G,WAAY6C,GAEtD,MAAM,GAAN,mBAAWC,GAAX,YAA4BE,KCjBnBC,EACT,qBAAKpK,MAAM,MAAMI,OAAO,MAAMiK,QAAQ,YAAYnH,UAAU,iBAAiBoH,KAAK,eAAeC,MAAM,6BAAvG,SACI,sBAAMC,SAAS,UAAU7J,EAAE,iMAItB8J,EACT,qBAAKzK,MAAM,MAAMI,OAAO,MAAMiK,QAAQ,YAAYnH,UAAU,sBAAsBoH,KAAK,eAAeC,MAAM,6BAA5G,SACI,sBAAMC,SAAS,UAAU7J,EAAE,0GAUtB+J,EACT,qBAAKH,MAAM,6BAA6BvK,MAAM,KAAKI,OAAO,KAAKkK,KAAK,eAAepH,UAAU,mBAAmBmH,QAAQ,YAAxH,SACI,sBAAM1J,EAAE,oIAIHgK,EACT,qBAAKJ,MAAM,6BAA6BvK,MAAM,KAAKI,OAAO,KAAKkK,KAAK,eAAepH,UAAU,mBAAmBmH,QAAQ,YAAxH,SACI,sBAAM1J,EAAE,iTCxBViK,G,OAAgD,CAClD1D,SAAU,WACVC,WAAY,eA2FD0D,EAxFM,SAAC3L,GAKf,IAAD,EAEiCC,mBAAwB,MAFzD,mBAEK2L,EAFL,KAEeC,EAFf,OAIkC5L,oBAAkB,GAJpD,mBAIK6L,EAJL,KAIiBC,EAJjB,KAMI/F,EAAMhG,EAAMgM,IACV/I,EAAsCjD,EAAtCiD,KAAMgJ,EAAgCjM,EAAhCiM,cAAeC,EAAiBlM,EAAjBkM,aAoB7BzL,qBAAU,WACNsL,ELqFuB,SAACnF,EAAqBH,GACjD,IAAMqB,EAAYD,IAClB,SAAOC,EAAUlB,KAASkB,EAAUlB,GAAM4B,SAAS/B,IKvFjC0F,CAAgBlJ,EAAKyD,SAAU9B,OAAO3B,EAAKwD,QAC1D,CAACxD,IAEJ,IACImJ,GAA6B,IAAlBH,GAA0BrH,OAAOgH,KAAchH,OAAO3B,EAAKsD,KA8C1E,OA3CI,qBAAKvC,UAAS,wBAAmBoI,EAAW,YAAc,IAAMC,cAAY,WAA5E,SACI,sBAAKrI,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,eAAf,SAA+BgC,EAAM,IACrC,uBAAMhC,UAAS,+BAA0Bf,EAAKyD,UAAY2F,cAAY,YAAtE,UAAmFX,EAAYzI,EAAKyD,UAApG,IAAgHzD,EAAKwD,MACrH,wBAAQzC,UAAU,kBAAkBqI,cAAY,aAAaC,QAzBtD,SAACC,GACpBA,EAAEC,iBACF,IAAMnK,GAAWyJ,EAEjBC,EAAc1J,IACE,IAAZA,ELkFkB,SAACuE,EAAqBH,GAChD,IAAMqB,EAAYD,IAEd4E,EAAkB3E,EAAUlB,GAChC6F,EAAkBA,EAAgBnJ,QAAO,SAACoJ,GAAD,OAAeA,IAAMjG,KAE9DqB,EAAUlB,GAAQ6F,EAAgBE,MAAK,SAAC9F,EAAW+F,GAAZ,OAA0B/F,EAAI+F,KAErEjJ,OAAO2D,aAAaY,QAAQ,YAAa9G,KAAKE,UAAUwG,IKzFhD+E,CAAe5J,EAAKyD,SAAU9B,OAAO3B,EAAKwD,KLuE3B,SAACG,EAAqBH,GAC7C,IAAMqB,EAAYD,IAEbC,EAAUlB,GAAM4B,SAAS/B,KAC1BqB,EAAUlB,GAAMV,KAAKO,GACrBqB,EAAUlB,GAAM+F,MAAK,SAAC9F,EAAW+F,GAAZ,OAA0B/F,EAAI+F,KACnDjJ,OAAO2D,aAAaY,QAAQ,YAAa9G,KAAKE,UAAUwG,KK3EpDgF,CAAY7J,EAAKyD,SAAU9B,OAAO3B,EAAKwD,MAiB/B,SAEQqF,EAAaP,EAAeL,OAKxC,oBAAIlH,UAAU,iBAAiBqI,cAAY,YAA3C,SAAwDpJ,EAAKmD,QAE7D,qBAAKpC,UAAU,gBAAf,SACMf,EAAK6C,QAAU7C,EAAK6C,QAAQ9D,KAAI,SAAC+K,GAE/B,IAAIC,EAAY,GAChB,IAAsB,IAAlBf,EAAwB,CACxB,IAAMgB,EAAyBrI,OAAOgH,KAAchH,OAAO3B,EAAKsD,MAAQwG,EAAE5G,MAAQlD,EAAKsD,IACjF2G,EAA0BtI,OAAOgH,KAAchH,OAAO3B,EAAKsD,MAAQwG,EAAE5G,MAAQlD,EAAKsD,IACxFyG,EAAYC,EAAyB,mBAAsBC,EAA0B,qBAAuB,GAGhH,OACI,sBAAuBlJ,UAAS,sCAAiCgJ,GAAjE,UACI,uBACIpG,KAAK,QACL0D,GAAE,cAAStE,EAAT,YAAgB+G,EAAE5G,KACpBgH,KAAI,YAAOnH,GACXiD,MAAO8D,EAAE5G,IACTiH,QAASxB,IAAamB,EAAE5G,IAAIkH,WAC5BC,SAAU,SAACf,GAAD,OA1DzB,SAACA,GACdV,EAAeU,EAAEgB,OAAOtE,OAExBiD,EAAaK,EAAEgB,OAAOtE,MAAOjD,GAuDgBwH,CAASjB,IAC1BkB,UAAkC,IAAxBzN,EAAMiM,cAChBjI,UAAU,uBACVqI,cAAY,cAChB,wBAAOrI,UAAU,+BAA+B0J,QAAO,cAAS1H,EAAT,YAAgB+G,EAAE5G,KAAzE,cAAkF4G,EAAE5G,IAApF,KAA2F4G,EAAE3H,UAXjG,UAAa2H,EAAE3H,UAab,aC0BfuI,EA3GF,WAAO,IAAD,EACyBjF,EAAgB,eAAgB,IADzD,mBACRU,EADQ,KACMwE,EADN,OAES3N,mBAA6B,IAFtC,mBAERgD,EAFQ,KAEF4K,EAFE,OAGwB5N,mBAAgB,IAHxC,mBAGR6N,EAHQ,KAGIC,EAHJ,OAIW9N,mBAAwB,MAJnC,mBAIRmC,EAJQ,KAID4L,EAJC,KAMfvN,qBAAU,YACS,uCAAG,8BAAAoG,EAAA,sEAEJF,EAAQ,YAFJ,cACPqE,EADO,gBAGJrE,EAAQ,cAHJ,OACEsB,EADF,OAWd4F,EAAQhD,EALM,CACVG,UACA/C,cAjBF,KASY,2CAAH,qDAaf0B,KACD,IAEHlJ,qBAAU,WACFwC,EAAK6G,QACLiE,EAAiB,IAAIrI,MAAMzC,EAAK6G,QAAQsB,KAAK,SAElD,CAACnI,IAEJxC,qBAAU,WACN,GAAc,OAAV2B,EAAJ,CAGA,IAAM6L,EAAY7M,KAAKC,MAAMD,KAAKE,UAAU8H,IAC5C6E,EAAU/H,KAAK,CACXvE,MAAM,IAAIuM,MAAOC,UACjB/L,UAEJwL,EAAgBK,MACjB,CAAC7L,IAEJ,IAAMgM,EAAiB,SAACC,EAA2BC,GAC/C,IAAMC,EAAS,YAAOT,GACtBS,EAAUD,GAAiBD,EAC3BN,EAAiBQ,IAefC,EAAiB,WACnB,IAEIC,EAAgB,EAMpB,OALAxL,EAAKzB,SAAQ,SAACC,EAAGuE,GACT8H,EAAW9H,IAASpB,OAAOkJ,EAAW9H,MAAUpB,OAAOnD,EAAE8E,MACzDkI,OALoB,GAQrBA,GAGX,OACI,sBAAKzK,UAAU,oCAAoCqI,cAAY,YAA/D,UAEwB,IAAhBpJ,EAAK6G,OACD,qBAAK9F,UAAU,cAAcqI,cAAY,UAAzC,qBAEA,qCACI,qBAAKrI,UAAU,sBAAsBqI,cAAY,SAAjD,SACI,uDAEJ,qBAAKrI,UAAU,aAAf,SACMf,EAAKjB,KAAI,SAACP,EAAQuE,GAAT,OACP,cAAC,EAAD,CAEIgG,IAAKhG,EACL/C,KAAMxB,EACNwK,cAAyB,OAAV7J,EACf8J,aAAckC,GAJTpI,WAW7B,qBAAKhC,UAAU,gBAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,yBAAQA,UAAU,8BAA8BsI,QAAS,SAACC,GAAD,OAlD1D,SAACA,GACZA,EAAEC,iBACEsB,EAAWtF,SAAS,OACpBkG,MAAM,oDAIV,IAAMC,EAAYH,IAClBE,MAAM,gBAAD,OAAOC,IACZX,EAASW,GAyCmEC,CAAOrC,IAAIkB,SAAoB,OAAVrL,EAArF,UAAgH,OAAVA,EAAiB,SAAM,GAA7H,kBAEc,OAAVA,GAAmB,sBAAK4B,UAAU,eAAf,2BAAmC5B,cCmD/DyM,EAxJE,WAAO,IAAD,EACXC,EAAiBC,cAAjBD,aAEJE,EAAe,EACnB,GAAIrL,OAAO2D,aAAaC,QAApB,UAA+BuH,EAA/B,iBAA4D,CAC5D,IAAMzH,EAAYjG,KAAKC,MAAMsC,OAAO2D,aAAaC,QAApB,UAA+BuH,EAA/B,kBACvBG,EAAkB5H,EAAU6H,YAAY,QACxCC,EAAmB9H,EAAU6H,YAAY,SAE3CF,EADAG,EAAmBF,EACJE,EAAmB,EAEnBF,EAAkB,EAXtB,MAeKhP,mBAA6B,IAflC,mBAeZgD,EAfY,KAeN4K,EAfM,OAgBmB5N,mBAAiB+O,GAhBpC,mBAgBZI,EAhBY,KAgBEC,EAhBF,OAiBkBpP,oBAAkB,GAjBpC,mBAiBZqP,EAjBY,KAiBDC,EAjBC,KAmBnB9O,qBAAU,WACe,aAAjBqO,GAAgD,eAAjBA,EAChB,uCAAG,4BAAAjI,EAAA,sEACIF,EAAQmI,GADZ,OACVvN,EADU,OAIdsM,EAAQnD,EAAanJ,EAAO,OAJd,2CAAH,oDAMfoI,GAEA/D,QAAQC,KAAK,2BAElB,CAACiJ,IAEJrO,qBAAU,WACFwC,EAAK6G,OAAS,IACTnG,OAAO2D,aAAaC,QAApB,UAA+BuH,EAA/B,kBACDnL,OAAO2D,aAAaY,QAApB,UAA+B4G,EAA/B,gBAA2D1N,KAAKE,UAAUoE,MAAMzC,EAAK6G,QAAQsB,KAAK,WAG3G,CAAC0D,EAAc7L,IAElB,IAAMuM,EAAoB,WAEtBD,GAAgB,IAgCdE,EAAS,SAACC,GACZ,GAAKA,EAAL,CAIA,GAAIC,MAAMD,GACN,OAAOhB,MAAM,4EAGjBc,IAEA,IAAII,EAAmBhL,OAAO8K,GAAQ,EAOtC,OALI9K,OAAO8K,IAAS,EAChBE,EAAmB,EACZhL,OAAO8K,GAAQzM,EAAK6G,SAC3B8F,EAAmB3M,EAAK6G,OAAS,GAE9BuF,EAAcO,KAGnBC,EACF,qBAAK7L,UAAU,gBAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,wBAAQA,UAAU,UAAUqI,cAAY,WAAWC,QAAS,SAACC,GAAD,OAtD5EiD,SAEAH,EAAcD,EAAe,IAoD+D3B,SAAU2B,GAAgB,EAAtG,uCAEJ,qBAAKpL,UAAU,mBAAf,SACI,wBAAQA,UAAU,UAAUqI,cAAY,WAAWC,QAAS,SAACC,GAAD,OAnD5EiD,SAEAH,EADiBD,EAAe,IAkD4D3B,SAAU2B,EAAe,EAAKnM,EAAK6G,OAA/G,8CAOdgG,EAAe,iBAAG7M,QAAH,IAAGA,OAAH,EAAGA,EAAOmM,UAAV,QAA2B,KAE5CW,EAAgB,KA+BpB,OA7BIA,EADgB,IAAhB9M,EAAK6G,OACY,qBAAK9F,UAAU,cAAcqI,cAAY,UAAzC,qBACV+C,GAAgBnM,EAAK6G,OAExB,sBAAK9F,UAAU,cAAf,UACI,qBAAKqI,cAAY,gBAAjB,4CAGA,sBAAMrI,UAAU,MAAMqI,cAAY,qBAAqBC,QAAS,kBAAMmD,EAAO,IAA7E,+CAIJ,qCACI,sBAAKzL,UAAU,kBAAf,UACI,sBAAKqI,cAAY,cAAjB,sCAAqC+C,EAAe,EAApD,IAAwDnM,EAAK6G,UAC7D,wBAAQ9F,UAAU,2CAA2CqI,cAAY,WAAWC,QA3DjF,SAACC,GAChBA,EAAEC,iBACFiD,EAAQ9L,OAAeqM,OAAO,uDAyDlB,6BAEJ,qBAAKhM,UAAU,aAAf,SACI,cAAC,EAAD,CAEIgI,IAAKoD,EACLnM,KAAM6M,EACN7D,cAAeqD,EACfpD,aA/EG,SAAC+D,EAAgC3B,GACpD,IAAM4B,EAAYtL,OAAO3B,EAAKmM,GAAc7I,OAAS3B,OAAOqL,GAI5D,GAFAV,GAAgB,GAEZ5L,OAAO2D,aAAaC,QAApB,UAA+BuH,EAA/B,iBAA4D,CAC5D,IAAMzH,EAAYjG,KAAKC,MAAMsC,OAAO2D,aAAaC,QAApB,UAA+BuH,EAA/B,kBAC7BzH,EAAUiH,GAAiB6B,OAAOD,GAClCvM,OAAO2D,aAAaY,QAApB,UAA+B4G,EAA/B,gBAA2D1N,KAAKE,UAAU+F,OAmEzD+H,QAYrB,sBAAKpL,UAAU,oCAAf,UACM+L,EACAF,MCvJC,SAASO,EAAOpQ,GAC3B,OACI,qBAAKgE,UAAU,kBAAkBqI,cAAY,UAA7C,SAAwDrM,EAAMoF,OCFtE,IA4CeiL,EA5CK,SAACC,EAAsBC,GAA8B,IAAD,EACxCtQ,mBAAiB,GADuB,mBAC7D6J,EAD6D,KACrD0G,EADqD,OAE1CvQ,mBAAiBqQ,GAFyB,mBAE7D1I,EAF6D,KAEtD6I,EAFsD,KAyCpE,MAAO,CAACC,aApBJ,qBAAK1M,UAAU,gBAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,wBAAQA,UAAU,UACdqI,cAAY,WACZC,QAAS,SAACC,GAAD,OAvBpB,SAACA,GACVA,EAAEC,iBAGF+D,IACAE,GAAS,SAAAE,GAAS,OAAIA,EAAY,KAkBEC,CAAKrE,IACrBkB,SAAU7F,GAAS,EAHvB,uCAKJ,qBAAK5D,UAAU,mBAAf,SACI,wBAAQA,UAAU,UACdqI,cAAY,WACZC,QAAS,SAACC,GAAD,OArBpB,SAACA,GACVA,EAAEC,iBAGF+D,IACAE,GAAS,SAAAE,GAAS,OAAIA,EAAY,KAgBEE,CAAKtE,IACrBkB,SAAU7F,EAAO,IAAMkC,EAH3B,8CAUElC,QAAO4I,cCoBlBM,EAxDA,WAAO,IAAD,EACThC,EAAiBC,cAAjBD,aADS,EAEO7O,mBAA6B,IAFpC,mBAEVgD,EAFU,KAEJ4K,EAFI,OAGoB5N,oBAAkB,GAHtC,mBAGVqP,EAHU,KAGCC,EAHD,OAKkCc,EAAY,GAAG,WAC9Dd,GAAgB,MADbmB,EALU,EAKVA,aAAqBK,EALX,EAKInJ,MAAiB4I,EALrB,EAKqBA,UAItC/P,qBAAU,WACe,aAAjBqO,GAAgD,eAAjBA,EAChB,uCAAG,4BAAAjI,EAAA,sEACgBW,EAAkBsH,GADlC,OACRpH,EADQ,OAEdmG,EAAQnG,GACR8I,EAAU9I,EAAgBoC,QAHZ,2CAAH,oDAKfH,GAEA/D,QAAQC,KAAK,2BAElB,CAACiJ,IAEJ,IAKMgB,EAAe,iBAAG7M,QAAH,IAAGA,OAAH,EAAGA,EAAO8N,UAAV,QAAuB,KA0B5C,OAtBoB,IAAhB9N,EAAK6G,OACW,cAACsG,EAAD,CAAQhL,KAAK,2DAGzB,sBAAKpB,UAAU,oCAAf,UACI,qBAAKA,UAAU,sBAAsBqI,cAAY,SAAjD,SACI,sBAAKA,cAAY,cAAjB,kDAAuC0E,EAAW,EAAlD,IAAsD9N,EAAK6G,YAE/D,qBAAK9F,UAAU,aAAf,SACI,cAAC,EAAD,CAEIgI,IAAK+E,EACL9N,KAAM6M,EACN7D,cAAeqD,EACfpD,aAvBG,WAEnBqD,GAAgB,KAiBKwB,KAOXL,MCEHM,EAnDG,WAAO,IAAD,IACI/Q,mBAA6B,IADjC,mBACbgD,EADa,KACP4K,EADO,OAEiB5N,oBAAkB,GAFnC,mBAEbqP,EAFa,KAEFC,EAFE,OAI+Bc,EAAY,GAAG,WAC9Dd,GAAgB,MADbmB,EAJa,EAIbA,aAAqBK,EAJR,EAICnJ,MAAiB4I,EAJlB,EAIkBA,UAItC/P,qBAAU,YACS,uCAAG,4BAAAoG,EAAA,sEACuBsB,IADvB,OACV8I,EADU,OAEdpD,EAAQoD,GACRT,EAAUS,EAAyBnH,QAHrB,2CAAH,qDAKfH,KACD,IAEH,IAKMmG,EAAe,iBAAG7M,QAAH,IAAGA,OAAH,EAAGA,EAAO8N,UAAV,QAAuB,KA0B5C,OAtBoB,IAAhB9N,EAAK6G,OACY,cAACsG,EAAD,CAAQhL,KAAK,2DAG1B,sBAAKpB,UAAU,oCAAf,UACI,qBAAKA,UAAU,sBAAsBqI,cAAY,SAAjD,SACI,sBAAKA,cAAY,cAAjB,sCAAqC0E,EAAW,EAAhD,IAAoD9N,EAAK6G,YAE7D,qBAAK9F,UAAU,aAAf,SACI,cAAC,EAAD,CAEIgI,IAAK+E,EACL9N,KAAM6M,EACN7D,cAAeqD,EACfpD,aAvBG,WAEnBqD,GAAgB,KAiBKwB,KAOZL,MCZFQ,G,OAlCK,WAAO,IAAD,EACcjR,oBAAkB,GADhC,mBACfkR,EADe,KACFC,EADE,KAuBtB,OApBA3Q,qBAAU,WAEFkD,OAAO0N,aACH1N,OAAO0N,WAAW,gCAAgCC,SAElDF,GAAa,GAIjBzN,OAAO0N,WAAW,gCAAgCE,iBAAiB,UAAU,SAAAhF,GACzE,IAAMiF,EAAiBjF,EAAE+E,QAAU,OAAS,QAC5CF,EAAgC,SAAnBI,SAGtB,IAEH/Q,qBAAU,WACNM,SAASC,cAAc,QAASyQ,aAAa,aAAcN,EAAc,OAAS,WACnF,CAACA,IAGA,sBAAK7G,GAAG,eAAetG,UAAU,+BAAjC,UACI,mBAAGA,UAAU,0BACb,sBAAKA,UAAU,+BAAf,UACI,uBAAO4C,KAAK,WAAW5C,UAAU,uBAAuBsG,GAAG,qBAAqB+B,cAAY,qBAAqBqF,aAAW,eAAetE,QAAS+D,EAAa7D,SAAU,SAACf,GAAQ6E,EAAa7E,EAAEgB,OAAOH,YAC1M,uBAAOpJ,UAAU,uBAAuB0J,QAAQ,+BCuCjDiE,G,OAzDG,WAAO,IAAD,EACW1R,oBAAkB,GAD7B,mBACb2R,EADa,KACHC,EADG,KAGdC,EAAUC,cAEVC,EAAe,SAACzF,GAClBA,EAAEC,iBACFqF,GAAYD,IAgBhB,OACI,wBAAQ5N,UAAU,6BAA6BqI,cAAY,aAA3D,SACI,sBAAKrI,UAAU,0BAAf,UACI,sBAAKA,UAAU,wEAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wBAAQA,UAAS,8BAAyB4N,EAAW,SAAW,IAAMtF,QAAS0F,EAA/E,SAA8FxG,MAKlG,qBAAKxH,UAAU,oBAAf,SACI,cAAC,IAAD,CAAMqG,GAAG,IAAIrG,UAAU,cAAvB,iCAIJ,qBAAKA,UAAU,mBAAf,SACI,cAAC,EAAD,SAGR,qBAAKA,UAAS,eAAU4N,EAAW,SAAW,IAA9C,SACI,+BACI,6BACI,yBAAQtF,QAnCV,SAACC,GACnByF,EAAazF,GACbuF,EAAQ5L,KAAK,eAiCO,UAAgC,mBAAGlC,UAAU,YAAb,SAA0BuH,IAA1D,gCAEJ,6BACI,yBAAQe,QAjCN,SAACC,GACvBA,EAAEC,iBACU7I,OAAOsO,QAAQ,qFboH/BtO,OAAO2D,aAAa4K,QACpBvO,OAAOwO,SAASC,WatFQ,UAAoC,mBAAGpO,UAAU,YAAb,SAA0ByH,IAA9D,wDCzDb,SAAS4G,IAAe,IAC3BC,EAAaC,cAAbD,SAMR,OAJA7R,qBAAU,WACNkD,OAAO6O,SAAS,EAAG,KACpB,CAACF,IAEG,KCiCIG,MA1Bf,WACI,OACI,eAAC,IAAD,CAAQC,SAAS,IAAjB,UACI,cAACL,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,0BAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,wBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACI,cAAC,EAAD,aCvBLC,EAZS,SAACC,GACjBA,GAAeA,aAAuB/J,UACtC,8BAAqBgK,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCFpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJxS,SAASyS,eAAe,SAM5BX,K","file":"static/js/main.e7404e3d.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './Line.scss';\n\nconst LineChart = (props: {\n    datas: {\n        time: number;\n        score: number;\n    }[]\n}) => {\n    const [isShowTooltip, setIsShowTooltip] = useState<Boolean>(false);\n    const [tooltipContent, setTooltipContent] = useState<JSX.Element | string>('');\n    const ref = useRef<SVGSVGElement>(null);\n    const tooltipRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const timeFormat = d3.timeFormat('%H:%M:%S');\n        const tooltipTimeFormat = d3.timeFormat('%Y-%b-%d %H:%M:%S');\n        const margin = ({top: 20, right: 10, bottom: 20, left: 40});\n        const width = document?.querySelector('#root .container')?.clientWidth ?? 300;\n        const height = 250;\n\n        const newData: any = JSON.parse(JSON.stringify(props.datas));\n        // [{\"time\":1619510720731,\"score\":2},{\"time\":1619510743700,\"score\":4}]\n        \n        newData.forEach((d: any) => {\n            // formar time\n            // console.log('parseTime', parseTime(\"1607326845882\"));\n            // console.log('timeFormat', timeFormat(new Date(1607326845882)));\n            d.timestamp = d.time;\n            d.time = timeFormat(d.time);\n        });\n        \n        // const minTime: any = d3.min(newData, (d: any) => d.time);\n        // const maxTime: any = d3.max(newData, (d: any) => d.time);\n        // const min: any = d3.min(datas, (d) => d.score);\n        // const max: any = d3.max(datas, (d) => d.score);\n\n        let svgElement: any = null;\n    \n        // ranges\n        \n        // if want to use time as scale\n        // const x: any = d3.scaleTime()\n        //     .range([margin.left + 10, width - margin.right])\n        //     .domain([minTime, maxTime]);\n\n        // if want to use category as scale\n        const paddingForX = 20;\n        const x: any = d3.scalePoint()\n            .range([margin.left + 10 + paddingForX, width - margin.right - paddingForX])\n            .domain(newData.map((d: any) => { return d.time }));\n        \n        const y = d3.scaleLinear()\n            .range([height - margin.bottom, margin.top])\n            .domain([0, 100]);\n        \n        const drawline = d3.line()\n            .curve(d3.curveMonotoneX)\n            .x((d: any) => x(d.time))\n            .y((d: any) => y(d.score))\n\n        svgElement = d3.select(ref.current)\n        svgElement.attr('viewBox', [0, 0, width, height]).attr('class', 'line-chart');\n\n        svgElement.append('g')\n            .attr('class', 'x-axis')\n            .attr('transform', `translate(0, ${height - margin.bottom})`)\n            // if use timeScale\n            // .call(d3.axisBottom(x).tickFormat((d: any) => timeFormat(d)).tickSizeOuter(0).tickSizeInner(0).tickPadding(10));\n            .call(d3.axisBottom(x).tickSizeOuter(0).tickSizeInner(0).tickPadding(10));\n\n        svgElement.append('g')\n            .attr('class', 'y-axis')\n            .attr('transform', `translate(${margin.left}, 0)`)\n            // .call(d3.axisLeft(y).ticks(5).tickSize(-width).tickSizeOuter(0).tickSizeInner(0).tickPadding(10));\n            // tickSize(-width) 畫出每條橫軸\n            // tickPadding  每一個 y 軸上文字與橫線的間距\n            // ticks 要拆幾格\n            .call(d3.axisLeft(y).ticks(4).tickSize(-width).tickPadding(15));\n            \n        // remove both underline\n        svgElement.selectAll('.domain').remove();\n        svgElement.select('.domain').attr('stroke', '#999')\n\n        // Set the gradient\n        svgElement.append('linearGradient')\n            .attr('id', 'line-gradient')\n            .attr('gradientUnits', 'userSpaceOnUse')\n            .selectAll('stop').data([\n                { offset: '0%', color: '#ffa00b' },\n                { offset: '100%', color: '#42605e' }\n            ])\n            .enter().append('stop')\n            .attr('offset', (d: any) => d.offset )\n            .attr('stop-color', (d: any) => d.color );\n\n        svgElement.append('path')\n            .attr('class', 'line')\n            .attr('stroke', 'url(#line-gradient)')\n            .attr('stroke-width', 3)\n            .attr('fill', 'none')\n            .style('stroke-linecap', 'round')\n            .attr('d', drawline(newData));\n        \n        \n        // filters go in defs element\n        var defs = svgElement.append('defs');\n        var filter = defs.append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', height)\n        filter.append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 4)\n            .attr('result', 'blur');\n        filter.append('feOffset')\n            .attr('in', 'blur')\n            .attr('dx', 0)\n            .attr('dy', 15)\n            .attr('result', 'offsetBlur');\n        var feMerge = filter.append('feMerge');\n        \n        feMerge.append('feMergeNode').attr('in', 'offsetBlur')\n        feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n        \n        svgElement.append('path')\n            .attr('class', 'line-shadow')\n            .style('filter', 'url(#drop-shadow)')\n            .attr('d', drawline(newData));\n        \n        // insert circles\n        svgElement.selectAll('circle')\n            .data(newData)\n            .enter()\n            .append('circle')\n            .attr('r', 5)\n            .attr('cx', (d: any) => x(d.time))\n            .attr('cy', (d: any ) => y(d.score))\n            .style('cursor', 'pointer')\n            .style('fill', () => {\n                return '#795548';\n            })\n            .on('mouseover', function(d: any) {\n                if (tooltipRef?.current) {\n                    setIsShowTooltip(true);\n                    const { pageX, pageY } = (d3 as any).event;\n                    \n                    if (pageX + 140 > window.innerWidth) {\n                        tooltipRef.current.style.left = 'initial';\n                        tooltipRef.current.style.right = (window.innerWidth - pageX) + 'px';\n                    } else {\n                        tooltipRef.current.style.left = pageX + 'px';\n                    }\n\n                    tooltipRef.current.style.top = (pageY - 70) + 'px';\n                    \n                    \n                    setTooltipContent(<div>\n                        <div>{tooltipTimeFormat(d.timestamp)}</div>\n                        <div><strong>Score</strong>: {d.score}</div>\n                    </div>);\n                }\n            })\t\t\t\t\t\n            .on('mouseout', function(d: any) {\n                if (tooltipRef?.current) {\n                    setIsShowTooltip(false);\n                }\n            });\n    }, [props.datas]);\n\n    return (\n        <div className=\"line-chart-container\">\n            <svg ref={ref}></svg>\n            <div className={`d3-tooltip ${isShowTooltip ? 'active' : '' }`} ref={tooltipRef}>{tooltipContent}</div>\n        </div>\n    )\n\n}\nexport default LineChart;","import { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst ProgressLine = (props: {\n    percentage: number;\n    fillColor: string;\n}) => {\n    const ref = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const width = document?.querySelector('#root .container')?.clientWidth ?? 300;\n        const height = 100;    \n        const radius = 50;\n        const border = 5;\n        const twoPi = Math.PI * 2;\n        const formatPercent = d3.format('.0%');\n        const arc = d3.arc()\n            .startAngle(0)\n            .innerRadius(radius)\n            .outerRadius(radius - border);\n        const progress = Number((props.percentage / 100).toFixed(2));\n\n        const svgElement: any = d3.select(ref.current);\n        svgElement.attr(\"viewBox\", [0, 0, width, height]).attr('class', 'line-chart');\n\n        const g = svgElement.append('g').attr('class', 'g-transform').attr('transform', `translate(${width/2}, ${height/2})`);\n\n        const meter = g.append('g').attr('class', 'progress-meter');\n        meter.append('path')\n            .attr('class', 'background')\n            .attr('fill', '#ccc')\n            .attr('fill-opacity', 0.5)\n            .attr('d', arc.endAngle(twoPi));\n\n     \n        const front = meter.append('path')\n            .attr('class', 'foreground')\n            .attr('fill', props.fillColor)\n            // .attr('fill', 'none')\n            // .attr(\"stroke\", \"red\")\n            // .attr(\"stroke-width\", 3)\n            // .style(\"stroke-linecap\", \"round\")\n            .attr('fill-opacity', 1);\n\n        const displayText = meter.append('text')\n            .attr('fill', '#333')\n            .attr('text-anchor', 'middle')\n            .attr('dy', '.35em');\n\n        // foreground.attr('d', arc.endAngle(twoPi * progress));\n        front.attr('d', arc.endAngle(twoPi * progress));\n        displayText.text(formatPercent(progress));\n\n    }, [props]);\n\n\n    return (\n        <div className=\"line-chart-container\">\n            <svg ref={ref}></svg>\n        </div>\n    )\n\n}\nexport default ProgressLine;","export const convertQuestionTitleToAnsMapping = (str: string) : {\n    title: string;\n    options: IOption[]\n} | null => {\n    // regex can't defined as global variable\n    // please search \"RegExp.exec() returns NULL sporadically\"\n    const regex: RegExp = /(.*?)\\s*\\(1\\)(.*?)\\s*\\(2\\)(.*?)\\s*\\(3\\)(.*?)\\s*\\(4\\)(.*?)\\s*$/g;\n    const match: RegExpExecArray | null = regex.exec(str);\n    \n    if (!Array.isArray(match)) {\n        console.warn(`${str} is invalid question title format`);\n        return null;\n    }\n\n    let options = [];\n    let optionsCounter = 1;\n    // index 2 ~ 5 means A, B, C, D\n    for (let idx = 2; idx <= 5; idx++) {\n        // remove \\n\n        // const text = match[idx].trim().replace(' ', '');\n        const text = match[idx].trim();\n\n        options.push({\n            val: optionsCounter,\n            text\n        });\n        optionsCounter++;\n    }\n\n    // const title = match[1].trim().replace(' ', '');\n    const title = match[1].trim();\n\n    return {\n        title: title || 'no title',\n        options\n    };\n}\n\n\nexport const formatJsonData = (datas: OriginalQuestion[]) : FormatedQuestion[] => {\n    const result = datas.map((d) => {\n\n        const trimedTitle = d.title.replace(/\\n/g, '');\n        const titleAndOptions = convertQuestionTitleToAnsMapping(trimedTitle);\n\n        return {\n            ans: Math.abs(d.ans),\n            qn: d.qn,\n            category: d.category as QuestionTypes,\n            title: titleAndOptions?.title ?? '',\n            options: titleAndOptions?.options\n        }\n    });\n    return result;\n}   \n\nexport const getData = async (type: QuestionTypes) => {\n    const response = await fetch(`${process.env.PUBLIC_URL}/data/${type}.json`);\n    if (!response.ok) {\n        throw new Error('An error has occured');\n    }\n\n    const datas = await response.json();\n    return formatJsonData(datas);\n}\n\nexport const getHistories = (type: QuestionTypes) => {\n    const histories = JSON.parse(window.localStorage.getItem(`${type}-pra-history`) as string);\n    if (!histories) {\n        return null;\n    }\n\n    return histories;\n}\n\nexport const getWrongQuestions = async (type: QuestionTypes) => {\n    const allQuestion = await getData(type);\n\n    const histories = getHistories(type);\n    \n    let pickedQuestions: FormatedQuestion[]= [];\n    \n    if (histories) {\n        histories.forEach((h: null | string, index: number) => {\n            if (h === \"false\") {\n                pickedQuestions.push(allQuestion[index])\n            }\n        });\n    }\n    \n    return pickedQuestions;\n}\n\nexport const getBookmarks = () => {\n    const bookmarks = JSON.parse(window.localStorage.getItem('bookmarks') as string);\n    if (!bookmarks) {\n        const defaultBookmark = {\n            html_css: [],\n            javascript: []\n        };\n\n        window.localStorage.setItem('bookmarks', JSON.stringify(defaultBookmark));\n\n        return defaultBookmark;\n    }\n    return bookmarks;\n}\n\nexport const setBookmark = (type: QuestionTypes, qn: number) => {\n    const bookmarks = getBookmarks();\n    \n    if (!bookmarks[type].includes(qn)) {\n        bookmarks[type].push(qn);\n        bookmarks[type].sort((a: number, b: number) => a - b);\n        window.localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n    }\n}\n\nexport const removeBookmark = (type: QuestionTypes, qn: number) => {\n    const bookmarks = getBookmarks();\n    \n    let typeOfBookmarks = bookmarks[type];\n    typeOfBookmarks = typeOfBookmarks.filter((q: number) => q !== qn);\n    \n    bookmarks[type] = typeOfBookmarks.sort((a: number, b: number) => a - b);\n    \n    window.localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n}\n\nexport const getIsBookmarked = (type: QuestionTypes, qn: number) => {\n    const bookmarks = getBookmarks();\n    return bookmarks[type] && bookmarks[type].includes(qn) ? true : false;\n}\n\nexport const getBookmarkedList = async () => {\n    const { html_css = [], javascript = [] } = getBookmarks();\n\n    const htmlCssQuestions: FormatedQuestion[] = await getData('html_css');\n    const javascriptQuestions: FormatedQuestion[] = await getData('javascript');\n\n    const filteredHtmlCss = htmlCssQuestions.filter((i: FormatedQuestion) => html_css.includes(i.qn));\n    const filteredJavaScript = javascriptQuestions.filter((i: FormatedQuestion) => javascript.includes(i.qn));\n    return [...filteredHtmlCss, ...filteredJavaScript];\n}\n\nexport const clean = () => {\n    window.localStorage.clear();\n    window.location.reload();\n}","import { useState, useEffect } from 'react';\n\nconst getValue = (key: string, initialValue: string | number | any[]| Function): any => {\n    const content = window.localStorage.getItem(key);\n    if (content) {\n        console.log('hook content', content);\n        console.log('hook JSON.parse(content)', JSON.parse(content));\n        return JSON.parse(content);\n    }\n    if (initialValue instanceof Function) {\n        return initialValue();\n    }\n    return initialValue;\n};\n\nconst useLocalStorage = (key: string, initialValue: string | number | any[] | Function) => {\n    const [value, setValue] = useState(() => {\n    //     // 這邊用 function 目的要希望只會 called 一次，只需要從 localstorage 拿到 initial value\n        return getValue(key, initialValue);\n    });\n    // const [value, setValue] = useState(() => getValue(key, initialValue));\n\n    useEffect(() => {\n        // only when value changed, save value in localStorage\n        window.localStorage.setItem(key, JSON.stringify(value));\n    }, [value]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return [value, setValue];\n}\n\nexport default useLocalStorage;","import { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport LineChart from '../../Charts/Line';\nimport ProgressLine from '../../Charts/ProgressLine';\nimport { getHistories, getWrongQuestions } from '../../../services';\nimport useLocalStorage from '../../../hooks/useLocalStorage';\n\nconst Home = () => {\n    const [scoreHistory] = useLocalStorage('scoreHistory', []);\n    const [wrongHtmlCss, setWrongHtmlCss] = useState<FormatedQuestion[]>([]);\n    const [wrongJavascript, setWrongJavascript] = useState<FormatedQuestion[]>([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            // @FIX ME\n            const wrongMarketQuestions = await getWrongQuestions('html_css');\n            const wrongEthicsQuestions = await getWrongQuestions('javascript');\n\n            setWrongHtmlCss(wrongMarketQuestions);\n            setWrongJavascript(wrongEthicsQuestions);\n        }\n        fetchData();\n    }, []);\n\n    const getPercentage = (type: QuestionTypes) => {\n        const histories = getHistories(type);\n    \n        if (!histories) {\n            return 0;\n        }\n        const totalCount = histories.length;\n        const finishCount = histories.filter((d: null | string) => d !== null).length;\n        return Math.round((finishCount/totalCount) * 100)\n    }\n\n    const getFinisheCount = (type: QuestionTypes) => {\n        const histories = getHistories(type);\n\n        if (!histories) {\n            return 0;\n        }\n        return histories.filter((d: any) => d !== null).length;\n    }\n\n    const marketPercentage = getPercentage('html_css');\n    const ethicsPercentage = getPercentage('javascript');\n\n    \n    let reviewItems = [];\n    if (wrongHtmlCss.length) {\n        reviewItems.push(<div key=\"html_css\" className=\"col-6\">\n            <Link to=\"/review/html_css\" className=\"ans-btn review-bg\">HTML/CSS</Link>\n        </div>);\n    }\n    if (wrongJavascript.length) {\n        reviewItems.push(<div key=\"javascript\" className=\"col-6\">\n            <Link to=\"/review/javascript\" className=\"ans-btn review-bg\">JavaScript</Link>\n        </div>);\n    }\n\n    return (\n        <div>\n            <div className=\"container-fluid max-width-700 pt-4 pb-4\">\n                <div id=\"practice-sec\" className=\"mb-3\">\n                    <h3 className=\"section-heading\">考題練習 Practice</h3>\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-6\">\n                            <Link to=\"/practice/html_css\" className=\"ans-btn practice-bg\">HTML/CSS</Link>\n                        </div>\n                        <div className=\"col-6\">\n                            <Link to=\"/practice/javascript\" className=\"ans-btn practice-bg\">JavaScript</Link>\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    wrongHtmlCss.length || wrongJavascript.length ? (\n                        <div id=\"review-sec\" className=\"mb-3\">\n                            <h3 className=\"section-heading\">複習錯誤題目 Review</h3>\n                            <div className=\"row align-items-center\">\n                                {reviewItems}\n                            </div>\n                        </div>\n                    ) : null\n                }\n                \n                <h3 className=\"section-heading\">模擬考試 Mock examination</h3>\n                <Link to=\"/exam\" className=\"ans-btn exam-bg\">模擬測驗</Link>\n            </div>\n\n            \n            <div className=\"container-fluid max-width-700 mt-3 mb-3\">\n                <section>\n                    <h3 className=\"section-heading\">作答完成率 Answer completion rate</h3>\n                    <div className=\"progress-line-wrap\">\n                        <div className=\"progress-line-item\">HTML / CSS</div>\n                        <ProgressLine percentage={marketPercentage} fillColor='#8c682f'/>\n                        <dl className=\"progress-finished-dl\">\n                            <dt>已作答</dt>\n                            <dd>{ getFinisheCount('html_css') }</dd>\n                        </dl>\n                    </div>\n                    <div className=\"progress-line-wrap\">\n                        <div className=\"progress-line-item\">JavaScript</div>\n                        <ProgressLine percentage={ethicsPercentage} fillColor='#8c682f'/>\n                        <dl className=\"progress-finished-dl\">\n                            <dt>已作答</dt>\n                            <dd>{ getFinisheCount('javascript') }</dd>\n                        </dl>\n                    </div>\n                </section>\n                <section>\n                    <h3 className=\"section-heading\">近期模擬測驗分數 Latest Score Histories</h3>\n                    <div className=\"statistics-card\">\n                        <LineChart datas={scoreHistory.slice(-5)}/>\n                    </div>\n                </section>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n\n","var Chance = require('chance');\nvar chance = new Chance();\n\nexport const pickQuestion = (datas: any[], quantity?: number | null) => {\n    if (quantity === null) {\n        return datas;\n    }\n\n    if (quantity && quantity > datas.length) {\n        return datas;\n    }\n    \n    return chance.pickset(datas, quantity);\n}\n\nexport const pickHalfHalfQuestion = (datas: { htmlcss: any[], javascript: any[]}, quantity: number) => {\n    const amount = quantity / 2;\n\n    const marketPicked = chance.pickset(datas.htmlcss, amount);\n    const ethicsPicked = chance.pickset(datas.javascript, amount);\n\n    return [...marketPicked, ...ethicsPicked];\n}\n\n","// via https://icons.getbootstrap.com/\n// import bookmark from 'bootstrap-icons/icons/bookmark.svg';\n// import bookmarkFill from 'bootstrap-icons/icons/bookmark-fill.svg';\n\nexport const bookmark = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-bookmark\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\"/>\n    </svg>\n);\n\nexport const bookmarkFill = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-bookmark-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5V2z\"/>\n    </svg>\n);\n\nexport const chevronLeftWhite = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-left\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"/>\n    </svg>\n);\n\nexport const threeDots = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\n        <path d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"/>\n    </svg>\n)\n\nexport const trash = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n        <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\n    </svg>\n)","import { useState, useEffect, ChangeEvent, SyntheticEvent } from 'react';\nimport { bookmark, bookmarkFill } from '../../components/Icons/index';\nimport { getIsBookmarked, setBookmark, removeBookmark } from '../../services/index';\n\nimport './QuestionCard.scss';\n\nconst categoryMap: { [p in QuestionTypes]: string } = {\n    html_css: 'HTML/CSS',\n    javascript: 'JavaScript'\n};\n\nconst QuestionCard = (props: {\n    seq: number;\n    data: FormatedQuestion;\n    haveSubmitted: boolean;\n    onAnsChanged: Function;\n}) => {\n\n    const [selected, updateSelected] = useState<string | null>(null);\n\n    const [bookmarked, setBookmarked] = useState<Boolean>(false);\n\n    const idx = props.seq;\n    const { data, haveSubmitted, onAnsChanged } = props;\n    \n    const onSelect = (e: ChangeEvent<HTMLInputElement>):void => {\n        updateSelected(e.target.value);\n        // pass value to parent component\n        onAnsChanged(e.target.value, idx);\n    }\n\n    const toggleBookmark = (e: SyntheticEvent) => {\n        e.preventDefault();\n        const current = !bookmarked;\n        \n        setBookmarked(current);\n        if (current === false) {\n            removeBookmark(data.category, Number(data.qn));\n        } else {\n            setBookmark(data.category, Number(data.qn));\n        }\n    }\n\n    useEffect(() => {\n        setBookmarked(getIsBookmarked(data.category, Number(data.qn)));\n    }, [data]);\n\n    let content = null;\n    let hasError = haveSubmitted === true && Number(selected) !== Number(data.ans);\n\n    content = (\n        <div className={`question-card ${hasError ? 'has-error' : ''}`} data-testid=\"que-card\">\n            <div className=\"question-card-content\">\n                <div className=\"question-card-header\">\n                    <div className=\"question-idx\">{idx + 1}</div>\n                    <span className={`question-badge badge-${data.category}`} data-testid=\"que-badge\">{categoryMap[data.category]} {data.qn}</span>\n                    <button className=\"question-bm-btn\" data-testid=\"que-bm-btn\" onClick={ toggleBookmark }>\n                        {\n                            bookmarked ? bookmarkFill : bookmark\n                        }\n                    </button>\n                </div>\n                \n                <h3 className=\"question-title\" data-testid=\"que-title\">{data.title}</h3>\n                \n                <div className=\"ans-btn-group\">\n                    { data.options ? data.options.map((o: IOption) => {\n                        \n                        let appendCss = '';\n                        if (haveSubmitted === true) {\n                            const isTheChosenAnswerWrong = Number(selected) !== Number(data.ans) && o.val === data.ans;\n                            const isTheChosenCorrectWrong = Number(selected) === Number(data.ans) && o.val === data.ans;\n                            appendCss = isTheChosenAnswerWrong ? 'wrong-ans-marked' :  isTheChosenCorrectWrong ? 'correct-ans-marked' : '';\n                        }\n\n                        return (\n                            <div key={`${o.text}`} className={`custom-control custom-radio ${appendCss}`}>\n                                <input \n                                    type=\"radio\"\n                                    id={`opt-${idx}-${o.val}`}\n                                    name={`q-${idx}`}\n                                    value={o.val}\n                                    checked={selected === o.val.toString()} \n                                    onChange={(e) => onSelect(e)}\n                                    disabled={props.haveSubmitted === true}\n                                    className=\"custom-control-input\"\n                                    data-testid=\"que-input\" />\n                                <label className=\"custom-control-label d-block\" htmlFor={`opt-${idx}-${o.val}`}>({o.val}) {o.text}</label>\n                            </div>\n                        )}) : null\n                    }\n                </div>\n            </div>\n        </div>)\n    return (\n        content\n    );\n}\n\nexport default QuestionCard;","import { useState, useEffect, SyntheticEvent } from 'react';\nimport { pickHalfHalfQuestion } from '../../../helpers/data/index';\nimport { getData } from '../../../services/index';\nimport QuestionCard from '../../QuestionCard';\nimport useLocalStorage from '../../../hooks/useLocalStorage';\n\nconst TOTAL = 10;\n\nconst Exam = () => {\n    const [scoreHistory, setScoreHistory] = useLocalStorage('scoreHistory', []);\n    const [data, setData] = useState<FormatedQuestion[]>([]);\n    const [userAnswer, updateUserAnswer] = useState<any[]>([]);\n    const [score, setScore] = useState<null | number>(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const [htmlcss, javascript] : [FormatedQuestion[], FormatedQuestion[]] = [\n                await getData('html_css'),\n                await getData('javascript')\n            ];\n\n            const datas = {\n                htmlcss,\n                javascript\n            };\n            // generate questions\n            setData(pickHalfHalfQuestion(datas, TOTAL));\n        }\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        if (data.length) {\n            updateUserAnswer(new Array(data.length).fill(null));\n        }\n    }, [data]);\n\n    useEffect(() => {\n        if (score === null) {\n            return;\n        }\n        const newRecord = JSON.parse(JSON.stringify(scoreHistory));\n        newRecord.push({\n            time: new Date().getTime(),\n            score\n        });\n        setScoreHistory(newRecord);\n    }, [score]) // eslint-disable-line react-hooks/exhaustive-deps\n\n    const updateAnsArray = (newValue: string | number, questionIndex: number):void => {\n        const newAnsAry = [...userAnswer];\n        newAnsAry[questionIndex] = newValue;\n        updateUserAnswer(newAnsAry);\n    }\n  \n    const submit = (e: SyntheticEvent) => {\n        e.preventDefault();\n        if (userAnswer.includes(null)) {\n            alert('尚未有題目未作答');\n            // const getUnAnsweredQuestions = [...userAnswer].map((d, i) => d === null ? i : null).filter(x => x);\n            // console.log('未填答', getUnAnsweredQuestions); \n        }\n        const thisScore = calculateScore();\n        alert(`成績 ${thisScore}`);\n        setScore(thisScore);\n    }\n\n    const calculateScore = (): number => {\n        const eachScoreOfQuestiin = 100/TOTAL;\n        \n        let correctLength = 0;\n        data.forEach((d, idx) => {\n            if (userAnswer[idx] &&  Number(userAnswer[idx]) === Number(d.ans)) {\n                correctLength++;\n            }\n        });\n        return correctLength*eachScoreOfQuestiin;\n    }\n\n    return (\n        <div className=\"container max-width-700 mt-3 mb-5\" data-testid=\"exam-page\">\n            {\n                data.length === 0 ?\n                    <div className=\"text-center\" data-testid=\"loading\">Loading</div>\n                    :\n                    <>\n                        <nav className=\"navbar navbar-light\" data-testid=\"navbar\">\n                            <div>模擬考</div>\n                        </nav>\n                        <div className=\"exams-wrap\">\n                            { data.map((d: any, idx: number) => (\n                                <QuestionCard \n                                    key={idx}\n                                    seq={idx}\n                                    data={d}\n                                    haveSubmitted={score !== null ? true : false}\n                                    onAnsChanged={updateAnsArray}\n                                />\n                            ))}\n                        </div>\n                    </>\n            }\n            \n            <div className=\"ans-btn-fixed\">\n                <div className=\"container max-width-700\">\n                    <button className=\"ans-btn d-inline-block w-50\" onClick={(e) => submit(e)} disabled={score !== null}>{score !== null ? '已' : ''}交卷</button>\n                    {\n                        score !== null && (<div className=\"score-result\">成績: {score}</div>)\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Exam;\n\n","import { useState, useEffect, SyntheticEvent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { pickQuestion } from '../../../helpers/data/index';\nimport { getData } from '../../../services/index';\nimport QuestionCard from '../../QuestionCard';\n\nconst Practice = () => {\n    const { practiceType } = useParams<{ practiceType: QuestionTypes }>();\n    \n    let defaultIndex = 0;\n    if (window.localStorage.getItem(`${practiceType}-pra-history`)) {\n        const histories = JSON.parse(window.localStorage.getItem(`${practiceType}-pra-history`) as string);\n        const lastIndexOfTrue = histories.lastIndexOf('true');\n        const lastIndexOfFalse = histories.lastIndexOf('false');\n        if (lastIndexOfFalse > lastIndexOfTrue) {\n            defaultIndex = lastIndexOfFalse + 1; \n        } else {\n            defaultIndex = lastIndexOfTrue + 1;\n        }\n    }\n\n    const [data, setData] = useState<FormatedQuestion[]>([]);\n    const [currentIndex, updateCurrent] = useState<number>(defaultIndex);\n    const [hasSubmit, updateHasSubmit] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (practiceType === 'html_css' || practiceType === 'javascript') {\n            const fetchData = async () => {\n                let datas = await getData(practiceType);\n                \n                // generate questions by practice type\n                setData(pickQuestion(datas, null));\n            }\n            fetchData();\n        } else {\n            console.warn('practiceType is wrong');\n        }\n    }, [practiceType]);\n\n    useEffect(() => {\n        if (data.length > 0) {\n            if (!window.localStorage.getItem(`${practiceType}-pra-history`)) {\n                window.localStorage.setItem(`${practiceType}-pra-history`, JSON.stringify(Array(data.length).fill(null))); \n            }\n        }\n    }, [practiceType, data]);  \n\n    const resetSubmitRecord = () => {\n        // reset hasSubmit to false\n        updateHasSubmit(false);\n    };\n\n    const prev = (e: SyntheticEvent) => {\n        resetSubmitRecord();\n\n        updateCurrent(currentIndex - 1);\n    }\n\n    const next = (e: SyntheticEvent) => {\n        resetSubmitRecord();\n        const newIndex = currentIndex + 1;\n        updateCurrent(newIndex);\n    }\n\n    const updateAnsArray = (userChooseAns: string | number, questionIndex: number):void => {\n        const isCorrect = Number(data[currentIndex].ans) === Number(userChooseAns);\n    \n        updateHasSubmit(true);\n\n        if (window.localStorage.getItem(`${practiceType}-pra-history`)) {\n            const histories = JSON.parse(window.localStorage.getItem(`${practiceType}-pra-history`) as string);\n            histories[questionIndex] = String(isCorrect);\n            window.localStorage.setItem(`${practiceType}-pra-history`, JSON.stringify(histories)); \n        }\n    }\n\n    const promptJump = (e: SyntheticEvent) => {\n        e.preventDefault();\n        jumpTo((window as any).prompt('直接移動到第幾題?'));\n    }\n\n    const jumpTo = (goto: number) => {\n        if (!goto) {\n            return;\n        }\n        \n        if (isNaN(goto)) {\n            return alert('很抱歉，請輸入正確的題號');\n        }\n        \n        resetSubmitRecord();\n        \n        let updateCurrentNum = Number(goto) - 1;\n\n        if (Number(goto) <= 0) {    \n            updateCurrentNum = 0;\n        } else if (Number(goto) > data.length) {\n            updateCurrentNum = data.length - 1;\n        }\n        return updateCurrent(updateCurrentNum);\n    }\n\n    const pager = (\n        <div className=\"ans-btn-fixed\">\n            <div className=\"container max-width-700\">\n                <div className=\"row\">\n                    <div className=\"col-6 text-left\">\n                        <button className=\"ans-btn\" data-testid=\"prev-btn\" onClick={(e) => prev(e)} disabled={currentIndex <= 0}>上一題 Prev</button>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <button className=\"ans-btn\" data-testid=\"next-btn\" onClick={(e) => next(e)} disabled={currentIndex + 1  > data.length}>下一題 Next</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    const currentQuestion = data?.[currentIndex] ?? null;\n  \n    let renderContent = null;\n    if (data.length === 0) {\n        renderContent = (<div className=\"text-center\" data-testid=\"loading\">Loading</div>);\n    } else if (currentIndex >= data.length) {\n        renderContent = (\n            <div className=\"text-center\">\n                <div data-testid=\"empty-content\">\n                    沒有題目了\n                </div>\n                <span className=\"btn\" data-testid=\"reset-currentindex\" onClick={() => jumpTo(1)}>回到第一題</span>\n            </div>);\n    } else {\n        renderContent = (\n            <>\n                <nav className=\"navbar p-0 mb-3\">\n                    <div data-testid=\"pra-heading\">考題練習 {currentIndex + 1}/{data.length}</div>\n                    <button className=\"btn btn-outline-primary btn-sm pt-0 pb-0\" data-testid=\"jump-btn\" onClick={promptJump}>移至</button>\n                </nav>\n                <div className=\"exams-wrap\">\n                    <QuestionCard\n                        key={currentIndex}\n                        seq={currentIndex}\n                        data={currentQuestion}\n                        haveSubmitted={hasSubmit}\n                        onAnsChanged={updateAnsArray}\n                    />\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <div className=\"container max-width-700 mt-3 mb-5\">\n            { renderContent }\n            { pager }\n        </div>\n    );\n}\n\nexport default Practice;\n\n","import React from 'react';\n\nexport default function NoData(props: { text: string }) {\n    return (\n        <div className=\"text-center m-4\" data-testid=\"no-data\">{props.text}</div>\n    )\n}","import { useState, SyntheticEvent } from 'react';\n\nconst useNavigate = (initialIndex: number, clearHasSubmit: Function) => {\n    const [length, setLength] = useState<number>(0);\n    const [index, setIndex] = useState<number>(initialIndex);\n    \n    const prev = (e: SyntheticEvent) => {\n        e.preventDefault();\n        \n        // reset hasSubmit to false\n        clearHasSubmit();\n        setIndex(prevIndex => prevIndex - 1);\n    }\n\n    const next = (e: SyntheticEvent) => {\n        e.preventDefault();\n        \n        // reset hasSubmit to false\n        clearHasSubmit();\n        setIndex(prevIndex => prevIndex + 1);\n    }\n\n    const navigateBody = (\n        <div className=\"ans-btn-fixed\">\n            <div className=\"container max-width-700\">\n                <div className=\"row\">\n                    <div className=\"col-6 text-left\">\n                        <button className=\"ans-btn\" \n                            data-testid=\"prev-btn\"\n                            onClick={(e) => prev(e)}\n                            disabled={index <= 0}>上一題 Prev</button>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <button className=\"ans-btn\"\n                            data-testid=\"next-btn\"\n                            onClick={(e) => next(e)}\n                            disabled={index +1 === length}>下一題 Next</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    return {navigateBody, index, setLength};\n}\n\nexport default useNavigate;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getWrongQuestions } from '../../../services'; \nimport QuestionCard from '../../QuestionCard';\nimport NoData from '../../NoData';\nimport useNavigate from '../../../hooks/useNavigate';\n\nconst Review = () => {\n    const { practiceType } = useParams<{ practiceType: QuestionTypes }>();\n    const [data, setData] = useState<FormatedQuestion[]>([]);\n    const [hasSubmit, updateHasSubmit] = useState<boolean>(false);\n    \n    const {navigateBody, index: curIndex, setLength} = useNavigate(0, () => {\n        updateHasSubmit(false);\n    });\n\n    useEffect(() => {\n        if (practiceType === 'html_css' || practiceType === 'javascript') {\n            const fetchData = async () => {\n                const pickedQuestions = await getWrongQuestions(practiceType);\n                setData(pickedQuestions);\n                setLength(pickedQuestions.length);\n            }\n            fetchData();\n        } else {\n            console.warn('practiceType is wrong');\n        }\n    }, [practiceType]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const updateAnsArray = (/* userChooseAns: string | number, questionIndex: number */):void => {\n        // const isCorrect = Number(data[currentIndex].ans) === Number(userChooseAns);\n        updateHasSubmit(true);\n    }\n\n    const currentQuestion = data?.[curIndex] ?? null;\n  \n    let renderContent = null;\n\n    if (data.length === 0) {\n        renderContent = <NoData text=\"尚未存有答錯的題目\" />;\n    } else {\n        renderContent = (\n            <div className=\"container max-width-700 mt-3 mb-5\">\n                <nav className=\"navbar navbar-light\" data-testid=\"navbar\">\n                    <div data-testid=\"pra-heading\">複習錯誤題目 {curIndex + 1}/{data.length}</div>\n                </nav>\n                <div className=\"exams-wrap\">\n                    <QuestionCard\n                        key={curIndex}\n                        seq={curIndex}\n                        data={currentQuestion}\n                        haveSubmitted={hasSubmit}\n                        onAnsChanged={updateAnsArray}\n                    />\n                </div>\n                { navigateBody }\n            </div>\n        )\n    }\n\n    return renderContent;\n}\n\nexport default Review;\n\n","import { useState, useEffect } from 'react';\nimport { getBookmarkedList } from '../../../services'; \nimport QuestionCard from '../../QuestionCard';\nimport NoData from '../../NoData';\nimport useNavigate from '../../../hooks/useNavigate';\n\nconst Bookmarks = () => {\n    const [data, setData] = useState<FormatedQuestion[]>([]);\n    const [hasSubmit, updateHasSubmit] = useState<boolean>(false);\n\n    const {navigateBody, index: curIndex, setLength} = useNavigate(0, () => {\n        updateHasSubmit(false);\n    });\n  \n    useEffect(() => {\n        const fetchData = async () => {\n            let databookmarkedQuestionss = await getBookmarkedList();\n            setData(databookmarkedQuestionss);\n            setLength(databookmarkedQuestionss.length);\n        }\n        fetchData();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const updateAnsArray = (/* userChooseAns: string | number, questionIndex: number */):void => {\n        // const isCorrect = Number(data[currentIndex].ans) === Number(userChooseAns);\n        updateHasSubmit(true);\n    }\n\n    const currentQuestion = data?.[curIndex] ?? null;\n  \n    let renderContent = null;\n\n    if (data.length === 0) {\n        renderContent = (<NoData text=\"尚未存有書籤的題目\" />);\n    } else {\n        renderContent = (\n            <div className=\"container max-width-700 mt-3 mb-5\">\n                <nav className=\"navbar navbar-light\" data-testid=\"navbar\">\n                    <div data-testid=\"pra-heading\">我的書籤 {curIndex + 1}/{data.length}</div>\n                </nav>\n                <div className=\"exams-wrap\">\n                    <QuestionCard\n                        key={curIndex}\n                        seq={curIndex}\n                        data={currentQuestion}\n                        haveSubmitted={hasSubmit}\n                        onAnsChanged={updateAnsArray}\n                    />\n                </div>\n                {navigateBody}\n            </div>\n        )\n    }\n\n    return renderContent;\n}\n\nexport default Bookmarks;\n\n","import { useState, useEffect } from 'react';\nimport './ThemeSwitch.scss';\n\nconst ThemeSwitch = () => {\n    const [isDarkTheme, setDarkTheme] = useState<boolean>(false);\n    \n    useEffect(() => {\n        // set default theme mode by prefer-color-scheme\n        if (window.matchMedia) {\n            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                // dark mode\n                setDarkTheme(true);\n            }\n    \n            // detect prefers-color-scheme\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n                const newColorScheme = e.matches ? 'dark' : 'light';\n                setDarkTheme(newColorScheme === 'dark');\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        document.querySelector('body')!.setAttribute('data-theme', isDarkTheme ? 'dark' : 'light')\n    }, [isDarkTheme]);\n\n    return (\n        <div id=\"theme-swtich\" className=\"custom-control custom-switch\">\n            <i className=\"bi bi-moon-stars-fill\"></i>\n            <div className=\"custom-control custom-switch\">\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"theme-swtich-input\" data-testid=\"theme-swtich-input\" aria-label=\"Toogle Theme\" checked={isDarkTheme} onChange={(e) => { setDarkTheme(e.target.checked) }}/>\n                <label className=\"custom-control-label\" htmlFor=\"theme-swtich-input\"></label>\n            </div>\n        </div>\n    )\n}\n\nexport default ThemeSwitch;","import { useState, SyntheticEvent } from 'react';\nimport {\n    Link,\n    // useLocation,\n    useHistory\n} from \"react-router-dom\";\n\nimport { threeDots, bookmarkFill, trash } from '../Icons';\nimport ThemeSwitch from '../ThemeSwitch';\nimport { clean } from '../../services';\n\nimport './AppHeader.scss';\n\nconst AppHeader = () => {\n    const [showMenu, toggleMenu] = useState<boolean>(false);\n    // const location = useLocation();\n    const history = useHistory();\n\n    const toToggleMenu = (e: SyntheticEvent) => {\n        e.preventDefault();\n        toggleMenu(!showMenu);\n    };\n\n    const goToBookmarks = (e: SyntheticEvent) => {\n        toToggleMenu(e);\n        history.push(\"/bookmarks\");\n    }\n\n    const localstorageClean = (e: SyntheticEvent) => {\n        e.preventDefault();\n        const ans = window.confirm('您確定要清除所有作答記錄嗎?');\n        if (ans) {\n            clean();\n        }\n    }\n\n    return (\n        <header className=\"app-header sticky-top px-0\" data-testid=\"app-header\">\n            <div className=\"container max-width-700\">\n                <div className=\"row no-gutters flex-nowrap justify-content-between align-items-center\">\n                    <div className=\"col-3\">\n                        <button className={`btn btn-sm btn-menu ${showMenu ? 'active' : ''}`} onClick={toToggleMenu}>{threeDots}</button>\n                        {/* @TBD {\n                            location.pathname !== '/' ?  <Link to=\"/\" className=\"btn-link back-link\" data-testid=\"back-link\">{chevronLeftWhite}</Link> : null\n                        } */}\n                    </div>\n                    <div className=\"col-6 text-center\">\n                        <Link to=\"/\" className=\"header-logo\">\n                            F2E Exam Practice\n                        </Link>\n                    </div>\n                    <div className=\"col-3 text-right\">\n                        <ThemeSwitch />\n                    </div>\n                </div>\n                <div className={`menu ${showMenu ? 'active' : ''}`}>\n                    <ul>\n                        <li>\n                            <button onClick={goToBookmarks}><i className=\"menu-icon\">{bookmarkFill}</i>書籤列表</button>\n                        </li>\n                        <li>\n                            <button onClick={localstorageClean}><i className=\"menu-icon\">{trash}</i>清除作答記錄</button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default AppHeader;","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// via: https://reactrouter.com/web/guides/scroll-restoration\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n    \n    return null;\n}","import {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n// pages\nimport Home from './Pages/Home';\nimport Exam from './Pages/Exam';\nimport Practice from './Pages/Practice';\nimport Review from './Pages/Review';\nimport Bookmarks from './Pages/Bookmarks';\n\n// components\nimport AppHeader from './AppHeader';\nimport ScrollToTop from './ScrollToTop';\n\nfunction App() {\n    return (\n        <Router basename=\"/\">\n            <ScrollToTop />\n            <AppHeader />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route exact path=\"/exam\">\n                    <Exam />\n                </Route>\n                <Route path=\"/practice/:practiceType\">\n                    <Practice />\n                </Route>\n                <Route path=\"/review/:practiceType\">\n                    <Review />\n                </Route>\n                <Route path=\"/bookmarks\">\n                    <Bookmarks />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/custom_bootstrap.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}